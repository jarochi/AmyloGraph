[{"path":[]},{"path":"https://github.com/KotulskaLab/AmyloGraph/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement [INSERT CONTACT METHOD]. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.0, available https://www.contributor-covenant.org/version/2/0/ code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https:// www.contributor-covenant.org/translations.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to AmyloGraph2","title":"Contributing to AmyloGraph2","text":"outlines propose change AmyloGraph2. detailed info contributing , tidyverse packages, please see development contributing guide.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to AmyloGraph2","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to AmyloGraph2","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed).","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to AmyloGraph2","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"KotulskaLab/AmyloGraph\", fork = TRUE). Install development dependences devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to AmyloGraph2","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to AmyloGraph2","text":"Please note AmyloGraph2 project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 AmyloGraph authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/SUPPORT.html","id":null,"dir":"","previous_headings":"","what":"Getting help with AmyloGraph2","title":"Getting help with AmyloGraph2","text":"Thanks using AmyloGraph2! filing issue, places explore pieces put together make process smooth possible.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/SUPPORT.html","id":"make-a-reprex","dir":"","previous_headings":"","what":"Make a reprex","title":"Getting help with AmyloGraph2","text":"Start making minimal reproducible example using reprex package. haven’t heard used reprex , ’re treat! Seriously, reprex make R-question-asking endeavors easier (pretty insane ROI five ten minutes ’ll take learn ’s ). additional reprex pointers, check Get help! section tidyverse site.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/SUPPORT.html","id":"where-to-ask","dir":"","previous_headings":"","what":"Where to ask?","title":"Getting help with AmyloGraph2","text":"Armed reprex, next step figure ask. ’s question: start community.rstudio.com, /StackOverflow. people answer questions. ’s bug: ’re right place, file issue. ’re sure: let community help figure ! problem bug feature request, can easily return report . opening new issue, sure search issues pull requests make sure bug hasn’t reported /already fixed development version. default, search pre-populated :issue :open. can edit qualifiers (e.g. :pr, :closed) needed. example, ’d simply remove :open search issues repo, open closed.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/SUPPORT.html","id":"what-happens-next","dir":"","previous_headings":"","what":"What happens next?","title":"Getting help with AmyloGraph2","text":"efficient possible, development tidyverse packages tends bursty, shouldn’t worry don’t get immediate response. Typically don’t look repo sufficient quantity issues accumulates, ’s burst intense activity focus efforts. makes development efficient avoids expensive context switching problems, cost taking longer get back . process makes good reprex particularly important might multiple months initial report start working . can’t reproduce bug, can’t fix !","code":""},{"path":[]},{"path":"https://github.com/KotulskaLab/AmyloGraph/articles/definitions.html","id":"main-definitions","dir":"Articles","previous_headings":"General assumptions","what":"Main definitions","title":"Terms and definitions","text":"interactee always acted upon interactor. AmyloGraph terminology used analyzed manuscripts. Suppose publication uses words like ‘co-incubation’ text clear distinguish interactor interactor. Additionally, authors study effect Protein Protein B vice versa. case, annotate two separate interactions: ) interactor B II) B interactor . Operator applied \\(\\) \\(b\\) means: ) \\(\\), II) \\(b\\), III) \\(\\) \\(b\\). Operator applied \\(\\) \\(b\\) \\(\\) \\(b\\) simultaneously. Authors’ interpretation always supersedes . refrain using vague terms seeding cross-seeding. Instead, describe interaction using three descriptors (described section Descriptors). T50: time required amyloid reaction reach 50% final fluorescence intensity.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/articles/definitions.html","id":"general-interaction-scenarios","dir":"Articles","previous_headings":"General assumptions","what":"General interaction scenarios","title":"Terms and definitions","text":"assume six main scenarios can occur interaction two amyloid proteins (see figure ). Scenarios depend stability (permanent/transient) binding interactor interactee impact interactee’s fibrillization speed (acceleration/inhibition). interaction interactor interactee, amyloid proteins forming fibrils independently - scenario occurs. transient contact interactor interactee along fibrillation inhibition - scenario II takes place, interactee’s fibrillation accelerated - scenario IV. physical binding interactor interactee occurs together fibrillation inhibition - scenario III happens, interactee’s fibrillation accelerated - scenario V VI takes place. scenario : interaction interactor interactee & amyloid proteins forming fibrils independently scenario II: transient contact interactor interactee & inhibition homofibril fibrillization scenario III: physical binding interactor interactee & inhibition homofibril fibrillization scenario IV: transient contact interactor interactee & acceleration homofibril fibrillization scenario V: physical binding interactor interactee & acceleration homofibril fibrillization scenario VI: physical binding interactor interactee & acceleration heterofibril fibrillization scenarios discrete represent points continuum rather real phenomenons. aware depending experimental conditions interaction can vary scenario III IV. Therefore, imply interaction follows strictly one scenarios, rather presents dominantly one . distinguish interaction scenarios design three descriptors (described ). Descriptor 1. differentiates scenarios (effect kinetics) II III (inhibited aggregation) well IV, V VI (acceleration). Descriptor 2. discriminates scenarios IV V/VI. Descriptor 3. differentiates scenarios V VI. example, descriptor 1 faster aggregation, descriptor 2 - yes, direct evidence descriptor 3 - yes, information, describe cross-seeding.","code":""},{"path":[]},{"path":"https://github.com/KotulskaLab/AmyloGraph/articles/definitions.html","id":"descriptor-1--the-impact-on-the-speed-of-the-interactee-fibrillization-","dir":"Articles","previous_headings":"General assumptions > General interaction scenarios","what":"Descriptor 1. The impact on the speed of the interactee’ fibrillization.","title":"Terms and definitions","text":"General remarks: descriptor fully based kinetics kinetic data. , fibrillization mean aggregation low-organisation levels mature fibrils confirmed e.g., microscopy images. interactor accelerates speed oligomer formation, never aggregate level mature fibrils (fibrillization occur), acceleration understand . commonly used technique measure kinetics fibrillization Thioflavin T (ThT) assay (e.g., ThT 101: primer use thioflavin T investigate amyloid formation (doi: 10.1080/13506129.2017.1304905)). aware fact ThT always quantitative, .e. higher (lower) ThT level - different conditions (e.g., presence interactor) - can caused changes fibril structure rather amount fibrils. purpose simplification, ignore always follow interpretation authors. Faster aggregation: ) maximum ThT emission observed end reaction interactee interactor higher maximum ThT emission interactee alone b) slope kinetic curve steeper c) lag phase shorter d) T50 lower. fibrillization still occurred. Slower aggregation: ) maximum ThT emission observed end reaction interactee interactor lower maximum ThT emission interactee alone b) slope kinetic curve less steep) c) lag phase longer. need (b) c. fibrillization still occurred. aggregation: confirmed fibrilization interaction. effect: ) slopes kinetic curves visibly similar b) maximum ThT emission similar c) lag phase similar. information: kinetic assays. Comparison ThT curves.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/articles/definitions.html","id":"descriptor-2--physical-binding-between-interactee-and-interactor-","dir":"Articles","previous_headings":"General assumptions > General interaction scenarios","what":"Descriptor 2. Physical binding between interactee and interactor.","title":"Terms and definitions","text":"Yes, direct evidence: experimental evidence fibrils consist two different amyloids (labeling; immunolabeling). also applies visible colocalization interactee interactor visible microscopic images. Yes, implied kinetics: seeding implied kinetic experiments results interpreted authors publication. principle, answer covers every acceleration fibrillization confirmed kinetic experiments. : effect elongation interactee’s fibrils. Formation fibrils interactee inhibited: formation interactee’s aggregates slowed completely halted interactor. information: experimental evidence seeding implied kinetics experiments results.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/articles/definitions.html","id":"descriptor-3--presence-of-the-heterogenous-fibrils-consisting-of-interactor-and-interactee-molecules-","dir":"Articles","previous_headings":"General assumptions > General interaction scenarios","what":"Descriptor 3. Presence of the heterogenous fibrils consisting of interactor and interactee molecules.","title":"Terms and definitions","text":"Yes: applies ) experimental evidence fibrils consist two different amyloids (labeling; immunolabeling) b) mature fibrils structurally different fibrils formed presence interactor c) term co-aggregation/ heterogeneous fibrils/ hybrid fibrils used describe aggregation process. : resulting amyloid fibrils dimension matching aggregating interactee alone. ) mature fibrils confirmed microscopy technique structure fibrils formed interactee without presence interactor b) fibrillar product c) interactee interactor protein. information: experimental evidence seeding implied kinetics experiments results.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/articles/definitions.html","id":"information-on-the-sequence-of-interactor-and-interactee","dir":"Articles","previous_headings":"General assumptions","what":"Information on the sequence of interactor and interactee","title":"Terms and definitions","text":"Name amyloid protein: chosen list amyloid proteins considered us. Every protein list confirmed amyloid-like properties. Sequence: sequence vector amino acids. case exact sequence known, provide longest possible precursor UniProt. protein available complex isolated (example, purified isolated spleen amyloid fibrils), consider sequence unavailable. interactee interactor mutants/fragments amyloid protein, provide sequence mutant/fragment wild type protein. consider sequences modified amino acids (e.g., methylated), include information sequence. consider mutants instead standard amino acids ) non-biogenic amino acids (e.g., tyramine) b) non-amino acid linkers. sequence interactor interactee contains modified amino acid residues (e.g., phosporylated), supply information sequential data. Source sequence: UniProt ID original protein. AmyloGraph database single protein treats protein can occur many taxonomic variants modifications (e.g., human bovine precursor albumins, P02768 P02769 well products post-translational modifications, Q56G89). source sequence may identical interactor’s interactee’s sequence. However, interactor interactee might part source sequence (human amyloid beta 1-40 part P05067) mutated variant source sequence (amino acids altered compared original sequence). example, AmyloGraph database CsgA protein can occur one 6 variants, including 4 homologues 2 mutants.","code":""},{"path":[]},{"path":"https://github.com/KotulskaLab/AmyloGraph/articles/definitions.html","id":"manuscript-collection","dir":"Articles","previous_headings":"Data acquisition","what":"Manuscript collection","title":"Terms and definitions","text":"started manuscript collection amyloid-amyloid interactions defining eligibility criteria: manuscript published 2000. manuscript report directly experimental results (excludes review papers simulations). manuscript report experiments conducted vitro. interactor accelerates speed oligomer formation, never aggregate level mature fibrils (fibrillization occur), acceleration understanding, inhibition. case different interactions two amyloids, differences stem different amyloid formation levels (monomer, oligomer, fiber), pH, concentration, temperature experimental conditions, showcase interactions two () different interactions. one interaction participants non-amyloid protein, included database. exceptions : ) non-aggregating homologs known amyloid proteins b) non-aggregating mutants amyloid proteins c) non-aggregating fragments amyloid proteins. interactee interactor ) mutant amyloid protein b) fragment amyloid protein c) taxonomic variant amyloid protein, still add database name original protein. However, case, provide exact sequence interactee/interactor original protein. sequence interactor interactee contains (due modifications) non-amino acids nonbiogenic amino acids, interaction rejected. manuscript report two-party interactions. database contain interactions two participants, exception two three participants protein different aggregation level. started search analysis 24 manuscripts -house collection publications. Next, expanded search repeatedly adding manuscripts cited manuscripts collection referencing manuscripts collections. final collection 364 manuscripts. curated information collected publications using two-step procedure: initial curation validation.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/articles/definitions.html","id":"initial-curation","dir":"Articles","previous_headings":"Data acquisition","what":"Initial curation","title":"Terms and definitions","text":"procedure, curator reviewed interactions described manuscripts annotated dedicated form considering three AmyloGraph descriptors: descriptor 1. impact speed fibrillization; descriptor 2. physical binding interactee interactors; descriptor 3. presence heterogenous fibrils (described detail section Descriptors). chose names amyloid proteins involved interaction list collected information amyloids’ sequence. record associated manuscript’s doi. final list interactions initial curation covered 863 interactions 49 proteins described 185 manuscripts.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/articles/definitions.html","id":"validation","dir":"Articles","previous_headings":"Data acquisition","what":"Validation","title":"Terms and definitions","text":"procedure, curator independently reviewed reported interaction records assigned manuscripts dedicated form. semi-random assignment procedure ensured curator validated specific record involved initial curation. reviewed interaction records similarly initial curation step. curator considered three AmyloGraph descriptors: descriptor 1. impact speed fibrillization; descriptor 2. physical binding interactee interactors; descriptor 3. presence heterogenous fibrils Descriptors. chose amyloid proteins’ names list, collected information sequence amyloid proteins involved interaction, provided sequence original protein UniProt ID. also add missing interaction records remove false ones. final list covers 896 interactions 46 proteins described 172 manuscripts. Number manuscripts, proteins interactions different stages data curation.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/articles/definitions.html","id":"contact-with-authors","dir":"Articles","previous_headings":"Data acquisition","what":"Contact with authors","title":"Terms and definitions","text":"consulted final result validation authors manuscripts reporting given interactions. , contacted corresponding author. case two corresponding authors, took last author publication. corresponding author available, tried contact first authors’ publication. somebody authored one manuscript contacted author reported interactions. contacted 122 authors. 11 authors confirmed 81 interactions (9.04 %) 21 manuscripts (12.21 %). Despite efforts, find way contact authors three manuscripts.","code":""},{"path":[]},{"path":"https://github.com/KotulskaLab/AmyloGraph/articles/definitions.html","id":"filter-by-motif","dir":"Articles","previous_headings":"Usage of AmyloGraph","what":"Filter by motif","title":"Terms and definitions","text":"Data AmyloGraph can filtered using amino acid motif. motif appear either interactor’s interactee’s sequence. interactions sequences displayed graph table. motif consist letters representing amino acids possibility using following ambiguous letters: * “B” – either “D” “N” * “J” – either “” “L” * “Z” – either “E” “Q” * “X” – standard amino acid Additionally, character “*” may used subsequence (possibly distinct) amino acids length. character “^” may used first character motif mark beginning sequence. Similarly, “$” may used last character motif mark end sequence. exemplary motifs: “” – sequence containing “” “GLAAALGA” – sequence containing “GLAAALGA” “^AAAAA” – sequence starting “AAAAA” “AXXXA” – sequence containing two “”s exactly three amino acids “*” – sequence containing two “”s number amino acids “^*GG$” – sequence starting single “” ending double “G” “^AG$” – sequence exactly “AG”","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/articles/definitions.html","id":"supplementary-references","dir":"Articles","previous_headings":"","what":"Supplementary references","title":"Terms and definitions","text":"articles listed sources curated data AmyloGraph database. Emil Dandanell Agerschou, Marie P. Schützmann, Nikolas Reppert, Michael M. Wördehoff, Hamed Shaykhalishahi, Alexander K. Buell, Wolfgang Hoyer, β-Turn exchanges α-synuclein segment 44-TKEG-47 reveal high sequence fidelity requirements amyloid fibril elongation, Biophysical Chemistry 2021 (doi: 10.1016/j.bpc.2020.106519). Mohsen Akbarian, Maryam Kianpour, Reza Yousefi, Ali Akbar Moosavi-Movahedi, Characterization insulin cross-seeding: underlying mechanism reveals seeding denaturant-induced insulin fibrillation proceeds structurally similar intermediates, RSC Advances 2020 (doi: 10.1039/d0ra05414c). Erika Andreetto, Li-Mei Yan, Andrea Caporale, Aphrodite Kapurniotu, Dissecting Role Single Regions IAPP Mimic IAPP Inhibition Aβ40 Amyloid Formation Cytotoxicity, ChemBioChem 2011 (doi: 10.1002/cbic.201100192). Erika Andreetto, Eleni Malideli, Li‐Mei Yan, Michael Kracklauer, Karine Farbiarz, Marianna Tatarek‐Nossol, Gerhard Rammes, Elke Prade, Tatjana Neumüller, Andrea Caporale, Anna Spanopoulou, Maria Bakou, Bernd Reif, Aphrodite Kapurniotu, Hot‐Segment‐Based Approach Design Cross‐Amyloid Interaction Surface Mimics Inhibitors Amyloid Self‐Assembly, Angewandte Chemie International Edition 2015 (doi: 10.1002/anie.201504973). Shruti Arya, Sarah L. Claud, Kristi Lazar Cantrell, Michael T. Bowers, Catalytic Prion-Like Cross-Talk Key Alzheimer’s Disease Tau-Fragment R3 Type 2 Diabetes Peptide IAPP, ACS Chemical Neuroscience 2019 (doi: 10.1021/acschemneuro.9b00516). Joseph D. Barritt, Nadine D. Younan, John H. Viles, N‐Terminally Truncated Amyloid‐β  (11 – 40/42)  Cofibrillizes Full‐Length Counterpart: Implications Alzheimer’s Disease, Angewandte Chemie International Edition 2017 (doi: 10.1002/anie.201704618). Karishma Bhasne, Sanjana Sebastian, Neha Jain, Samrat Mukhopadhyay, Synergistic Amyloid Switch Triggered Early Heterotypic Oligomerization Intrinsically Disordered α-Synuclein Tau, Journal Molecular Biology 2018 (doi: 10.1016/j.jmb.2018.04.020). Henrik Biverstål, Lisa Dolfe, Erik Hermansson, Axel Leppert, Mara Reifenrath, Bengt Winblad, Jenny Presto, Jan Johansson, Dissociation BRICHOS trimer monomers leads increased inhibitory effect Aβ42 fibril formation, Biochimica et Biophysica Acta (BBA) - Proteins Proteomics 2015 (doi: 10.1016/j.bbapap.2015.04.005). David C. Bode, Helen F. Stanyon, Trisha Hirani, Mark D. Baker, Jon Nield, John H. Viles, Serum Albumin’s Protective Inhibition Amyloid-β Fiber Formation Suppressed Cholesterol, Fatty Acids Warfarin, Journal Molecular Biology 2018 (doi: 10.1016/j.jmb.2018.01.008). Erin Bove-Fenderson, Ryo Urano, John E. Straub, David . Harris, Cellular prion protein targets amyloid-β fibril ends via C-terminal domain prevent elongation, Journal Biological Chemistry 2017 (doi: 10.1074/jbc.m117.789990). Kristoffer Brännström, Tohidul Islam, Anna L. Gharibyan, Irina Iakovleva, Lina Nilsson, Cheng Choo Lee, Linda Sandblad, Annelie Pamrén, Anders Olofsson, Properties Amyloid-β Fibrils Determined Path Formation, Journal Molecular Biology 2018 (doi: 10.1016/j.jmb.2018.05.001). Samuel J. Bunce, Yiming Wang, Katie L. Stewart, Alison E. Ashcroft, Sheena E. Radford, Carol K. Hall, Andrew J. Wilson, Molecular insights surface-catalyzed secondary nucleation amyloid-β 40 (Aβ 40 ) peptide fragment Aβ 16–22, Science Advances 2019 (doi: 10.1126/sciadv.aav8216). Jason Candreva, Edward Chau, Margaret E. Rice, Jin Ryoun Kim, Interactions Soluble Species β-Amyloid α-Synuclein Promote Oligomerization Inhibiting Fibrillization, Biochemistry 2019 (doi: 10.1021/acs.biochem.9b00655). Ping Cao, Fanling Meng, Andisheh Abedini, Daniel P. Raleigh, Ability Rodent Islet Amyloid Polypeptide Inhibit Amyloid Formation Human Islet Amyloid Polypeptide Important Implications Mechanism Amyloid Formation Design Inhibitors, Biochemistry 2010 (doi: 10.1021/bi901751b). Linda Cerofolini, Enrico Ravera, Sara Bologna, Thomas Wiglenda, Annett Böddrich, Bettina Purfürst, Iryna Benilova, Magdalena Korsak, Gianluca Gallo, Domenico Rizzo, Leonardo Gonnelli, Marco Fragai, Bart De Strooper, Erich E. Wanker, Claudio Luchinat, Mixing Aβ(1–40) Aβ(1–42) peptides generates unique amyloid fibrils, Chemical Communications 2020 (doi: 10.1039/d0cc02463e). Yu-Jen Chang, Yun-Ru Chen, coexistence equal amount Alzheimer’s amyloid-β 40 42 forms structurally stable toxic oligomers distinct pathway, FEBS Journal 2014 (doi: 10.1111/febs.12813). Saketh Chemuru, Ravindra Kodali, Ronald Wetzel, C-Terminal Threonine Reduces Aβ43 Amyloidogenicity Compared Aβ42, Journal Molecular Biology 2016 (doi: 10.1016/j.jmb.2015.06.008). Sean Chia, Patrick Flagmeier, Johnny Habchi, Veronica Lattanzi, Sara Linse, Christopher M. Dobson, Tuomas P. J. Knowles, Michele Vendruscolo, Monomeric fibrillar α-synuclein exert opposite effects catalytic cycle promotes proliferation Aβ42 aggregates, Proceedings National Academy Sciences 2017 (doi: 10.1073/pnas.1700239114). Line Friis Bakmann Christensen, Kirstine Friis Jensen, Janni Nielsen, Brian Stougaard Vad, Gunna Christiansen, Daniel Erik Otzen, Reducing Amyloidogenicity Functional Amyloid Protein FapC Increases Ability Inhibit α-Synuclein Fibrillation, ACS Omega 2019 (doi: 10.1021/acsomega.8b03590). R. Costa, . Gonçalves, M.J. Saraiva, . Cardoso, Transthyretin binding -Beta peptide - Impact -Beta fibrillogenesis toxicity, FEBS Letters 2008 (doi: 10.1016/j.febslet.2008.02.034). Ellen Y. Cotrina, Ana Gimeno, Jordi Llop, Jesús Jiménez-Barbero, Jordi Quintana, Gregorio Valencia, Isabel Cardoso, Rafel Prohens, Gemma Arsequell, Calorimetric Studies Binary Ternary Molecular Interactions Transthyretin, Aβ Peptides, Small-Molecule Chaperones toward Alternative Strategy Alzheimer’s Disease Drug Discovery, Journal Medicinal Chemistry 2020 (doi: 10.1021/acs.jmedchem.9b01970). Risto Cukalevski, Xiaoting Yang, Georg Meisl, Ulrich Weininger, Katja Bernfur, Birgitta Frohm, Tuomas P. J. Knowles, Sara Linse, Aβ40 Aβ42 peptides self-assemble separate homomolecular fibrils binary mixtures cross-react primary nucleation, Chemical Science 2015 (doi: 10.1039/c4sc02517b). C. Dammers, M. Schwarten, . K. Buell, D. Willbold, Pyroglutamate-modified Aβ(3-42) affects aggregation kinetics Aβ(1-42) accelerating primary secondary pathways, Chemical Science 2017 (doi: 10.1039/c6sc04797a). Anvesh K. R. Dasari, Rakez Kayed, Sungsool Wi, Kwang Hun Lim, Tau Interacts C-Terminal Region α-Synuclein, Promoting Formation Toxic Aggregates Distinct Molecular Conformations, Biochemistry 2019 (doi: 10.1021/acs.biochem.9b00215). Dexter N. Dean, Jennifer C. Lee, Defining amyloid link Parkinson’s disease melanoma, Proceedings National Academy Sciences 2020 (doi: 10.1073/pnas.2009702117). Francis C. Dehle, Heath Ecroyd, Ian F. Musgrave, John . Carver, αB-Crystallin inhibits cell toxicity associated amyloid fibril formation κ-casein amyloid-β peptide, Cell Stress Chaperones 2010 (doi: 10.1007/s12192-010-0212-z). Irina L. Derkatch, Susan M. Uptain, Tiago F. Outeiro, Rajaraman Krishnan, Susan L. Lindquist, Susan W. Liebman, Effects Q/N-rich, polyQ, non-polyQ amyloids de novo formation [ PSI + ] prion yeast aggregation Sup35 vitro, Proceedings National Academy Sciences 2004 (doi: 10.1073/pnas.0404968101). Glyn L. Devlin, Tuomas P.J. Knowles, Adam Squires, Margaret G. McCammon, Sally L. Gras, Melanie R. Nilsson, Carol V. Robinson, Christopher M. Dobson, Cait E. MacPhee, Component Polypeptide Chains Bovine Insulin Nucleate Inhibit Aggregation Parent Protein Conformation-dependent Manner, Journal Molecular Biology 2006 (doi: 10.1016/j.jmb.2006.05.007). Shailendra Dhakal, Courtney E. Wyant, Hannah E. George, Sarah E. Morgan, Vijayaraghavan Rangachari, Prion-like C-Terminal Domain TDP-43 α-Synuclein Interact Synergistically Generate Neurotoxic Hybrid Fibrils, Journal Molecular Biology 2021 (doi: 10.1016/j.jmb.2021.166953). Jiali Du, Regina M. Murphy, Characterization Interaction β-Amyloid Transthyretin Monomers Tetramers, Biochemistry 2010 (doi: 10.1021/bi101280t). Zhi Du, Yijia Guan, Chao Ding, Nan Gao, Jinsong Ren, Xiaogang Qu, Cross-fibrillation insulin amyloid β chiral surfaces: Chirality affects aggregation kinetics cytotoxicity, Nano Research 2018 (doi: 10.1007/s12274-018-1995-y). Kriti Dubey, Bibin G. Anand, Mayur K. Temgire, Karunakar Kar, Evidence Rapid Coaggregation Globular Proteins Amyloid Formation, Biochemistry 2014 (doi: 10.1021/bi501333q). Luisa D’Urso, Marcello Condorelli, Orazio Puglisi, Carmelo Tempra, Fabio Lolicato, Giuseppe Compagnini, Carmelo La Rosa, Detection characterization nM concentration oligomers formed hIAPP, Aβ(1–40) equimolar mixture using SERS MD simulations, Physical Chemistry Chemical Physics 2018 (doi: 10.1039/c7cp08552d). Brian R. Fluharty, Emiliano Biasini, Matteo Stravalaci, Alessandra Sclip, Luisa Diomede, Claudia Balducci, Pietro La Vitola, Massimo Messa, Laura Colombo, Gianluigi Forloni, Tiziana Borsello, Marco Gobbi, David . Harris, N-terminal Fragment Prion Protein Binds Amyloid-β Oligomers Inhibits Neurotoxicity Vivo, Journal Biological Chemistry 2013 (doi: 10.1074/jbc.m112.423954). Kanchan Garai, Ammon E. Posey, Xinyi Li, Joel N. Buxbaum, Rohit V. Pappu, Inhibition amyloid beta fibril formation monomeric human transthyretin, Protein Science 2018 (doi: 10.1002/pro.3396). Ricardo Gaspar, Georg Meisl, Alexander K. Buell, Laurence Young, Clemens F. Kaminski, Tuomas P. J. Knowles, Emma Sparr, Sara Linse, Secondary nucleation monomers fibril surface dominatesα-synuclein aggregation provides autocatalytic amyloid amplification, Quarterly Reviews Biophysics 2017 (doi: 10.1017/s0033583516000172). Ricardo Gaspar, Tommy Garting, Anna Stradner, Eye lens crystallin proteins inhibit autocatalytic amyloid amplification nature mature α-synuclein fibrils, PLOS ONE 2020 (doi: 10.1371/journal.pone.0235198). Xinwei Ge, Ye Yang, Yunxiang Sun, Weiguo Cao, Feng Ding, Islet Amyloid Polypeptide Promotes Amyloid-Beta Aggregation Binding-Induced Helix-Unfolding Amyloidogenic Core, ACS Chemical Neuroscience 2018 (doi: 10.1021/acschemneuro.7b00396). Megan Murray Gessel, Chun Wu, Huiyuan Li, Gal Bitan, Joan-Emma Shea, Michael T. Bowers, Aβ(39–42) Modulates Aβ Oligomerization Fibril Formation, Biochemistry 2011 (doi: 10.1021/bi201520b). Seyyed Abolghasem Ghadami, Sean Chia, Francesco Simone Ruggeri, Georg Meisl, Francesco Bemporad, Johnny Habchi, Roberta Cascella, Christopher M. Dobson, Michele Vendruscolo, Tuomas P. J. Knowles, Fabrizio Chiti, Transthyretin Inhibits Primary Secondary Nucleations Amyloid-β Peptide Aggregation Reduces Toxicity Oligomers, Biomacromolecules 2020 (doi: 10.1021/acs.biomac.9b01475). Benoit . Giasson, Mark S. Forman, Makoto Higuchi, Lawrence . Golbe, Charles L. Graves, Paul T. Kotzbauer, John Q. Trojanowski, Virginia M.-Y. Lee, Initiation Synergistic Fibrillization Tau Alpha-Synuclein, Science 2003 (doi: 10.1126/science.1082324). Sharon Gilead, Haguy Wolfenson, Ehud Gazit, Molecular Mapping Recognition Interface Islet Amyloid Polypeptide Insulin, Angewandte Chemie International Edition 2006 (doi: 10.1002/anie.200602034). S. Giunta, M.B. Valli, R. Galeazzi, P. Fattoretti, E.H. Corder, L. Galeazzi, Transthyretin inhibition amyloid beta aggregation toxicity, Clinical Biochemistry 2005 (doi: 10.1016/j.clinbiochem.2005.08.007). Sarah L Griner, Paul Seidler, Jeannette Bowler, Kevin Murray, Tianxiao Peter Yang, Shruti Sahay, Michael R Sawaya, Duilio Cascio, Jose Rodriguez, Stephan Philipp, Justyna Sosna, Charles G Glabe, Tamir Gonen, David S Eisenberg, Structure-based inhibitors amyloid beta core suggest common interface tau, eLife 2019 (doi: 10.7554/elife.46924). Lei Gu, Zhefeng Guo, Alzheimer’s Aβ42 Aβ40 peptides form interlaced amyloid fibrils, Journal Neurochemistry 2013 (doi: 10.1111/jnc.12202). Neal D. Hammer, Jens C. Schmidt, Matthew R. Chapman, curli nucleator protein, CsgB, contains amyloidogenic domain directs CsgA polymerization, Proceedings National Academy Sciences 2007 (doi: 10.1073/pnas.0703310104). Xiuping Hao, Jie Zheng, Yan Sun, Xiaoyan Dong, Seeding Cross-Seeding Aggregations Aβ40 N-Terminal-Truncated Peptide Aβ11–40, Langmuir 2019 (doi: 10.1021/acs.langmuir.8b03599). Mamoru Haratake, Tohru Takiguchi, Naho Masuda, Sakura Yoshida, Takeshi Fuchigami, Morio Nakayama, Amyloid formation characteristics GNNQQNY yeast prion protein Sup35 seeding heterogeneous polypeptides, Colloids Surfaces B: Biointerfaces 2017 (doi: 10.1016/j.colsurfb.2016.10.011). Kevin Hartman, Jeffrey R. Brender, Kazuaki Monde, Akira Ono, Margery L. Evans, Nataliya Popovych, Matthew R. Chapman, Ayyalusamy Ramamoorthy, Bacterial curli protein promotes conversion PAP248-286into amyloid SEVI: cross-seeding dissimilar amyloid sequences, PeerJ 2013 (doi: 10.7717/peerj.5). Linda Helmfors, Andrea Boman, Livia Civitelli, Sangeeta Nath, Linnea Sandin, Camilla Janefjord, Heather McCann, Henrik Zetterberg, Kaj Blennow, Glenda Halliday, Ann-Christin Brorsson, Katarina Kågedal, Protective properties lysozyme β-amyloid pathology: implications Alzheimer disease, Neurobiology Disease 2015 (doi: 10.1016/j.nbd.2015.08.024). Chae Eun Heo, Tae Su Choi, Hugh . Kim, Competitive homo- hetero- self-assembly amyloid-β 1–42 1–40 early stage fibrillation, International Journal Mass Spectrometry 2018 (doi: 10.1016/j.ijms.2018.02.002). Ryo Honda, Amyloid‐β Peptide Induces Prion Protein Amyloid Formation: Evidence Widespread Amyloidogenic Effect, Angewandte Chemie International Edition 2018 (doi: 10.1002/anie.201800197). Istvan Horvath, Pernilla Wittung-Stafshede, Cross-talk amyloidogenic proteins type-2 diabetes Parkinson’s disease, Proceedings National Academy Sciences 2016 (doi: 10.1073/pnas.1610371113). Istvan Horvath, Sandra Rocha, Pernilla Wittung-Stafshede, Vitro Analysis α-Synuclein Amyloid Formation Cross-Reactivity, Methods Molecular Biology,Amyloid Proteins 2018 (doi: 10.1007/978-1-4939-7816-8_6). Istvan Horvath, Igor . Iashchishyn, Roman . Moskalenko, Chao Wang, Sebastian K. T. S. Wärmländer, Cecilia Wallin, Astrid Gräslund, Gabor G. Kovacs, Ludmilla . Morozova-Roche, Co-aggregation pro-inflammatory S100A9 α-synuclein Parkinson’s disease: ex vivo vitro studies, Journal Neuroinflammation 2018 (doi: 10.1186/s12974-018-1210-9). Yi-Hsuan Hsu, Yun-Wen Chen, Meng-Hsin Wu, Ling-Hsien Tu, Protein Glycation Glyoxal Promotes Amyloid Formation Islet Amyloid Polypeptide, Biophysical Journal 2019 (doi: 10.1016/j.bpj.2019.05.013). Rundong Hu, Baiping Ren, Mingzhen Zhang, Hong Chen, Yonglan Liu, Lingyun Liu, Xiong Gong, Binbo Jiang, Jie Ma, Jie Zheng, Seed-Induced Heterogeneous Cross-Seeding Self-Assembly Human Rat Islet Polypeptides, ACS Omega 2017 (doi: 10.1021/acsomega.6b00559). Rundong Hu, Mingzhen Zhang, Hong Chen, Binbo Jiang, Jie Zheng, Cross-Seeding Interaction β-Amyloid Human Islet Amyloid Polypeptide, ACS Chemical Neuroscience 2015 (doi: 10.1021/acschemneuro.5b00192). Rundong Hu, Mingzhen Zhang, Kunal Patel, Qiuming Wang, Yung Chang, Xiong Gong, Ge Zhang, Jie Zheng, Cross-Sequence Interactions Human Rat Islet Amyloid Polypeptides, Langmuir 2014 (doi: 10.1021/la500632d). Alexandre . Ilitchev, Maxwell J. Giammona, Carina Olivas, Sarah L. Claud, Kristi L. Lazar Cantrell, Chun Wu, Steven K. Buratto, Michael T. Bowers, Hetero-oligomeric Amyloid Assembly Mechanism: Prion Fragment PrP(106–126) Catalyzes Islet Amyloid Polypeptide β-Hairpin, Journal American Chemical Society 2018 (doi: 10.1021/jacs.8b05925). Yuji Inoue, Shigeko Kawai-Noma, Ayumi Koike-Takeshita, Hideki Taguchi, Masasuke Yoshida, Yeast prion protein New1 can break Sup35 amyloid fibrils fragments ATP-dependent manner, Genes Cells 2011 (doi: 10.1111/j.1365-2443.2011.01510.x). Emma T. . S. JAIKARAN, Melanie R. NILSSON, Anne CLARK, Pancreatic beta-cell granule peptides form heteromolecular complexes inhibit islet amyloid polypeptide fibril formation, Biochemical Journal 2004 (doi: 10.1042/bj20030852). Neha Jain, Jörgen Ådén, Kanna Nagamatsu, Margery L. Evans, Xinyi Li, Brennan McMichael, Magdalena . Ivanova, Fredrik Almqvist, Joel N. Buxbaum, Matthew R. Chapman, Inhibition curli assembly Escherichia coli biofilm formation human systemic amyloid precursor transthyretin, Proceedings National Academy Sciences 2017 (doi: 10.1073/pnas.1708805114). Asad Jan, Ozgun Gokce, Ruth Luthi-Carter, Hilal . Lashuel, Ratio Monomeric Aggregated Forms Aβ40 Aβ42 Important Determinant Amyloid-β Aggregation, Fibrillogenesis, Toxicity, Journal Biological Chemistry 2008 (doi: 10.1074/jbc.m803159200). Ibrahim Javed, Zhenzhen Zhang, Jozef Adamcik, Nicholas Andrikopoulos, Yuhuan Li, Daniel E. Otzen, Sijie Lin, Raffaele Mezzenga, Thomas P. Davis, Feng Ding, Pu Chun Ke, Accelerated Amyloid Beta Pathogenesis Bacterial Amyloid FapC, Advanced Science 2020 (doi: 10.1002/advs.202001299). Theodoros K. Karamanos, Arnout P. Kalverda, Gary S. Thompson, Sheena E. Radford, Visualization Transient Protein-Protein Interactions Promote Inhibit Amyloid Assembly, Molecular Cell 2014 (doi: 10.1016/j.molcel.2014.05.026). Kathryn M. Keefer, Kevin C. Stein, Heather L. True, Heterologous prion-forming proteins interact cross-seed aggregation Saccharomyces cerevisiae, Scientific Reports 2017 (doi: 10.1038/s41598-017-05829-5). Jungsu Kim, Luisa Onstead, Suzanne Randle, Robert Price, Lisa Smithson, Craig Zwizinski, Dennis W. Dickson, Todd Golde, Eileen McGowan, Aβ40 Inhibits Amyloid DepositionIn Vivo, Journal Neuroscience 2007 (doi: 10.1523/jneurosci.4849-06.2007). Radosveta P. Koldamova, Iliya M. Lefterov, Martina . Lefterova, John S. Lazo, Apolipoprotein -Directly Interacts Amyloid Precursor Protein Inhibits Aβ Aggregation Toxicity, Biochemistry 2001 (doi: 10.1021/bi002186k). Nadejda Koloteva-Levine, Liam D. Aubrey, Ricardo Marchante, Tracey J. Purton, Jennifer R. Hiscock, Mick F. Tuite, Wei-Feng Xue, Amyloid particles facilitate surface-catalyzed cross-seeding acting promiscuous nanoparticles, Proceedings National Academy Sciences 2021 (doi: 10.1073/pnas.2104148118). Mark R.H. Krebs, Ludmilla . Morozova-Roche, Katie Daniel, Carol V. Robinson, Christopher M. Dobson, Observation sequence specificity seeding protein amyloid fibrils, Protein Science 2004 (doi: 10.1110/ps.04707004). Pascal Krotee, Sarah L. Griner, Michael R. Sawaya, Duilio Cascio, Jose . Rodriguez, Dan Shi, Stephan Philipp, Kevin Murray, Lorena Saelices, Ji Lee, Paul Seidler, Charles G. Glabe, Lin Jiang, Tamir Gonen, David S. Eisenberg, Common fibrillar spines amyloid-β human islet amyloid polypeptide revealed microelectron diffraction structure-based inhibitors, Journal Biological Chemistry 2018 (doi: 10.1074/jbc.m117.806109). Inna Kuperstein, Kerensa Broersen, Iryna Benilova, Jef Rozenski, Wim Jonckheere, Maja Debulpaep, Annelies Vandersteen, Ine Segers-Nolten, Kees Van Der Werf, Vinod Subramaniam, Dries Braeken, Geert Callewaert, Carmen Bartic, Rudi D’Hooge, Ivo Cristiano Martins, Frederic Rousseau, Joost Schymkowitz, Bart De Strooper, Neurotoxicity Alzheimer’s disease Aβ peptides induced small changes Aβ42 Aβ40 ratio, EMBO Journal 2010 (doi: 10.1038/emboj.2010.211). Janett Köppen, Anja Schulze, Lisa Machner, Michael Wermann, Rico Eichentopf, Max Guthardt, Angelika Hähnel, Jessica Klehm, Marie-Christin Kriegeskorte, Maike Hartlage-Rübsamen, Markus Morawski, Stephan von Hörsten, Hans-Ulrich Demuth, Steffen Roßner, Stephan Schilling, Amyloid-Beta Peptides Trigger Aggregation Alpha-Synuclein Vitro, Molecules 2020 (doi: 10.3390/molecules25030580). Jennifer L. Larson, Andrew D. Miranker, Mechanism Insulin Action Islet Amyloid Polypeptide Fiber Formation, Journal Molecular Biology 2004 (doi: 10.1016/j.jmb.2003.10.045). Annika Larsson, Susanna Malmström, Per Westermark, Signs cross-seeding: aortic medin amyloid trigger protein AA deposition, Amyloid 2011 (doi: 10.3109/13506129.2011.630761). Xinyi Li, Xin Zhang, Ali Reza . Ladiwala, Deguo Du, Jay K. Yadav, Peter M. Tessier, Peter E. Wright, Jeffery W. Kelly, Joel N. Buxbaum, Mechanisms Transthyretin Inhibition β-Amyloid AggregationIn Vitro, Journal Neuroscience 2013 (doi: 10.1523/jneurosci.2561-13.2013). Chang-Wei Liu, Benoit . Giasson, Karen . Lewis, Virginia M. Lee, George N. DeMartino, Philip J. Thomas, Precipitating Role Truncated α-Synuclein Proteasome α-Synuclein Aggregation, Journal Biological Chemistry 2005 (doi: 10.1074/jbc.m501508200). Lin Liu, Regina M. Murphy, Kinetics Inhibition β-Amyloid Aggregation Transthyretin, Biochemistry 2006 (doi: 10.1021/bi0618520). Peng Liu, Shuai Zhang, Mei-sha Chen, Qian Liu, Chenxuan Wang, Chen Wang, Yan-Mei Li, Flemming Besenbacher, Mingdong Dong, Co-assembly human islet amyloid polypeptide (hIAPP)/insulin, Chem. Commun. 2012 (doi: 10.1039/c1cc14285b). Kaho Long, Thomas L. Williams, Brigita Urbanc, Insulin Inhibits Aβ42 Aggregation Prevents Aβ42-Induced Membrane Disruption, Biochemistry 2019 (doi: 10.1021/acs.biochem.9b00696). Jinxia Lu, Shengnan Zhang, Xiaojuan Ma, Chunyu Jia, Zhenying Liu, Chengan Huang, Cong Liu, Dan Li, Structural basis interplay α-synuclein Tau regulating pathological amyloid aggregation, Journal Biological Chemistry 2020 (doi: 10.1074/jbc.ra119.012284). Kelvin C. Luk, Dustin J. Covell, Victoria M. Kehm, Bin Zhang, Insung Y. Song, Matthew D. Byrne, Rose M. Pitkin, Samantha C. Decker, John Q. Trojanowski, Virginia M.-Y. Lee, Molecular Biological Compatibility Host Alpha-Synuclein Influences Fibril Pathogenicity, Cell Reports 2016 (doi: 10.1016/j.celrep.2016.08.053). Jinghui Luo, Sebastian K.T.S. Wärmländer, Astrid Gräslund, Jan Pieter Abrahams, Non-chaperone Proteins Can Inhibit Aggregation Cytotoxicity Alzheimer Amyloid β Peptide, Journal Biological Chemistry 2014 (doi: 10.1074/jbc.m114.574947). Jinghui Luo, Sebastian K. T. S. Wärmländer, Astrid Gräslund, Jan Pieter Abrahams, Human lysozyme inhibits vitro aggregation Aβ peptides, vivo associated Alzheimer’s disease, Chemical Communications 2013 (doi: 10.1039/c3cc42325e). Jinghui Luo, Sebastian K. T. S. Wärmländer, Astrid Gräslund, Jan Pieter Abrahams, Reciprocal Molecular Interactions Aβ Peptide Linked Alzheimer’s Disease Insulin Linked Diabetes Mellitus Type II, ACS Chemical Neuroscience 2016 (doi: 10.1021/acschemneuro.5b00325). Eliezer Masliah, Edward Rockenstein, Isaac Veinbergs, Yutaka Sagara, Margaret Mallory, Makoto Hashimoto, Lennart Mucke, β-Amyloid peptides enhance α-synuclein accumulation neuronal deficits transgenic mouse model linking Alzheimer’s disease Parkinson’s disease, Proceedings National Academy Sciences 2001 (doi: 10.1073/pnas.211412398). Fanling Meng, Daniel P. Raleigh, Andisheh Abedini, Combination Kinetically Selected Inhibitors Trans Leads Highly Effective Inhibition Amyloid Formation, Journal American Chemical Society 2010 (doi: 10.1021/ja1046186). Chris T. Middleton, Peter Marek, Ping Cao, Chi-cheng Chiu, Sadanand Singh, Ann Marie Woys, Juan J. de Pablo, Daniel P. Raleigh, Martin T. Zanni, Two-dimensional infrared spectroscopy reveals complex behaviour amyloid fibril inhibitor, Nature Chemistry 2012 (doi: 10.1038/nchem.1293). Julijana Milojevic, Annie Raditsis, Giuseppe Melacini, Human Serum Albumin Inhibits Aβ Fibrillization “Monomer-Competitor” Mechanism, Biophysical Journal 2009 (doi: 10.1016/j.bpj.2009.08.028). Tarek Mohamed, Sarbjeet Singh Gujral, Praveen P. N. Rao, Tau Derived Hexapeptide AcPHF6 Promotes Beta-Amyloid (Aβ) Fibrillogenesis, ACS Chemical Neuroscience 2017 (doi: 10.1021/acschemneuro.7b00433). Fatemeh Mohammadi, Zeinab Takalloo, Hossein Rahmani, Mohammad Ali Nasiri Khalili, Khosro Khajeh, Gholamhossein Riazi, Reza H. Sajedi, Interplay isoform 1N4R tau protein amyloid-β peptide fragment 25–35 reducing non-reducing conditions, Journal Biochemistry 2020 (doi: 10.1093/jb/mvaa101). Marija Mucibabic, Pär Steneberg, Emmelie Lidh, Jurate Straseviciene, Agnieszka Ziolkowska, Ulf Dahl, Emma Lindahl, Helena Edlund, α-Synuclein promotes IAPP fibril formation vitro β-cell amyloid formation vivo mice, Scientific Reports 2020 (doi: 10.1038/s41598-020-77409-z). Megan M. Murray, Summer L. Bernstein, Vy Nyugen, Margaret M. Condron, David B. Teplow, Michael T. Bowers, Amyloid β Protein: Aβ40 Inhibits Aβ42 Oligomerization, Journal American Chemical Society 2009 (doi: 10.1021/ja8092604). Charlotte Nerelius, Magnus Gustafsson, Kerstin Nordling, Annika Larsson, Jan Johansson, Anti-Amyloid Activity C-Terminal Domain proSP-C Amyloid β-Peptide Medin, Biochemistry 2009 (doi: 10.1021/bi900135c). Krzysztof Nieznanski, Krystyna Surewicz, Shugui Chen, Hanna Nieznanska, Witold K. Surewicz, Interaction Prion Protein Aβ Amyloid Fibrils Revisited, ACS Chemical Neuroscience 2014 (doi: 10.1021/cn500019c). Krzysztof Nieznanski, Jin-Kyu Choi, Shugui Chen, Krystyna Surewicz, Witold K. Surewicz, Soluble Prion Protein Inhibits Amyloid-β (Aβ) Fibrillization Toxicity, Journal Biological Chemistry 2012 (doi: 10.1074/jbc.c112.400614). Lina Nilsson, Annelie Pamrén, Tohidul Islam, Kristoffer Brännström, Solmaz . Golchin, Nina Pettersson, Irina Iakovleva, Linda Sandblad, Anna L. Gharibyan, Anders Olofsson, Transthyretin Interferes Aβ Amyloid Formation Redirecting Oligomeric Nuclei Non-Amyloid Aggregates, Journal Molecular Biology 2018 (doi: 10.1016/j.jmb.2018.06.005). Bartosz Nizynski, Hanna Nieznanska, Robert Dec, Solomiia Boyko, Wojciech Dzwolak, Krzysztof Nieznanski, Amyloidogenic cross-seeding Tau protein: Transient emergence structural variants fibrils, PLOS ONE 2018 (doi: 10.1371/journal.pone.0201182). Justin M. Nussbaum, Stephan Schilling, Holger Cynis, Antonia Silva, Eric Swanson, Tanaporn Wangsanut, Kaycie Tayler, Brian Wiltgen, Asa Hatami, Raik Rönicke, Klaus Reymann, Birgit Hutter-Paier, Anca Alexandru, Wolfgang Jagla, Sigrid Graubner, Charles G. Glabe, Hans-Ulrich Demuth, George S. Bloom, Prion-like behaviour tau-dependent cytotoxicity pyroglutamylated amyloid-β, Nature 2012 (doi: 10.1038/nature11060). Takayuki Oikawa, Takashi Nonaka, Makoto Terada, Akira Tamaoka, Shin-ichi Hisanaga, Masato Hasegawa, α-Synuclein Fibrils Exhibit Gain Toxic Function, Promoting Tau Aggregation Inhibiting Microtubule Assembly, Journal Biological Chemistry 2016 (doi: 10.1074/jbc.m116.736355). Kenjiro Ono, Ryoichi Takahashi, Tokuhei Ikeda, Masahito Yamada, Cross-seeding effects amyloid β-protein α-synuclein, Journal Neurochemistry 2012 (doi: 10.1111/j.1471-4159.2012.07847.x). Ofek Oren, Victor Banerjee, Ran Taube, Niv Papo, Aβ42 variant inhibits intra- extracellular amyloid aggregation enhances cell viability, Biochemical Journal 2018 (doi: 10.1042/bcj20180247). Marie E. Oskarsson, Erik Hermansson, Ye Wang, Nils Welsh, Jenny Presto, Jan Johansson, Gunilla T. Westermark, BRICHOS domain Bri2 inhibits islet amyloid polypeptide (IAPP) fibril formation toxicity human beta cells, Proceedings National Academy Sciences 2018 (doi: 10.1073/pnas.1715951115). Katiuscia Pagano, Denise Galante, Cristina D’Arrigo, Alessandro Corsaro, Mario Nizzari, Tullio Florio, Henriette Molinari, Simona Tomaselli, Laura Ragona, Effects Prion Protein Aβ42 Pyroglutamate-Modified AβpΕ3-42 Oligomerization Toxicity, Molecular Neurobiology 2018 (doi: 10.1007/s12035-018-1202-x). Bo Pang, Xiaoyu Zhuang, Xinyu Bian, Shu Liu, Zhiqiang Liu, Fengrui Song, Studies cross-interaction hIAPP Aβ25-35 aggregation process binary mixture electrospray ionization-ion mobility-mass spectrometry, Journal Mass Spectrometry 2020 (doi: 10.1002/jms.4643). Jonathan Pansieri, Igor . Iashchishyn, Hussein Fakhouri, Lucija Ostojić, Mantas Malisauskas, Greta Musteikyte, Vytautas Smirnovas, Matthias M. Schneider, Tom Scheidt, Catherine K. Xu, Georg Meisl, Tuomas P. J. Knowles, Ehud Gazit, Rodolphe Antoine, Ludmilla . Morozova-Roche, Templating S100A9 amyloids Aβ fibrillar surfaces revealed charge detection mass spectrometry, microscopy, kinetic microfluidic analyses, Chemical Science 2020 (doi: 10.1039/c9sc05905a). Jonathan Pansieri, Lucija Ostojić, Igor . Iashchishyn, Mazin Magzoub, Cecilia Wallin, Sebastian K.T.S. Wärmländer, Astrid Gräslund, Mai Nguyen Ngoc, Vytautas Smirnovas, Željko Svedružić, Ludmilla . Morozova-Roche, Pro-Inflammatory S100A9 Protein Aggregation Promoted NCAM1 Peptide Constructs, ACS Chemical Biology 2019 (doi: 10.1021/acschembio.9b00394). Andréa C. Paula-Lima, M. Alejandra Tricerri, Jordano Brito-Moreira, Theresa R. Bomfim, Fabio F. Oliveira, Margaret H. Magdesian, Lea T. Grinberg, Rogerio Panizzutti, Sérgio T. Ferreira, Human apolipoprotein –binds amyloid-β prevents Aβ-induced neurotoxicity, International Journal Biochemistry & Cell Biology 2009 (doi: 10.1016/j.biocel.2008.12.003). Kris Pauwels, Thomas L. Williams, Kyle L. Morris, Wim Jonckheere, Annelies Vandersteen, Geoff Kelly, Joost Schymkowitz, Frederic Rousseau, Annalisa Pastore, Louise C. Serpell, Kerensa Broersen, Structural Basis Increased Toxicity Pathological Aβ42:Aβ40 Ratios Alzheimer Disease, Journal Biological Chemistry 2012 (doi: 10.1074/jbc.m111.264473). Tyler J. Perlenfein, Jacob D. Mehlhoff, Regina M. Murphy, Insights mechanism cystatin C oligomer amyloid formation interaction β-amyloid, Journal Biological Chemistry 2017 (doi: 10.1074/jbc.m117.786558). Sergei Perov, Ofir Lidor, Nir Salinas, Nimrod Golan, Einav Tayeb- Fligelman, Maya Deshmukh, Dieter Willbold, Meytal Landau, Structural Insights Curli CsgA Cross-β Fibril Architecture Inspire Repurposing Anti-amyloid Compounds Anti-biofilm Agents, PLOS Pathogens 2019 (doi: 10.1371/journal.ppat.1007978). Emily H. Pilkington, Yanting Xing, Bo Wang, Aleksandr Kakinen, Miaoyi Wang, Thomas P. Davis, Feng Ding, Pu Chun Ke, Effects Protein Corona IAPP Amyloid Aggregation, Fibril Remodelling, Cytotoxicity, Scientific Reports 2017 (doi: 10.1038/s41598-017-02597-0). Maa O. Quartey, Jennifer N. K. Nyarko, Jason M. Maley, Jocelyn R. Barnes, Maria . C. Bolanos, Ryan M. Heistad, Kaeli J. Knudsen, Paul R. Pennington, Josef Buttigieg, Carlos E. De Carvalho, Scot C. Leary, Matthew P. Parsons, Darrell D. Mousseau, Aβ(1–38) peptide negative regulator Aβ(1–42) peptide implicated Alzheimer disease progression, Scientific Reports 2021 (doi: 10.1038/s41598-020-80164-w). Lida Rahimi Araghi, Derek R. Dee, Cross-Species Cross-Polymorph Seeding Lysozyme Amyloid Reveals Dominant Polymorph, Frontiers Molecular Biosciences 2020 (doi: 10.3389/fmolb.2020.00206). Jared K. Raynes, Li Day, Pauline Crepin, Mathew H. Horrocks, John . Carver, Coaggregation κ-Casein β-Lactoglobulin Produces Morphologically Distinct Amyloid Fibrils, Small 2017 (doi: 10.1002/smll.201603591). Agata Rekas, Lucy Jankova, David C. Thorn, Roberto Cappai, John . Carver, Monitoring prevention amyloid fibril formation α-crystallin, FEBS Journal 2007 (doi: 10.1111/j.1742-4658.2007.06144.x). Agata Rekas, Christopher G Adda, J Andrew Aquilina, Kevin J Barnham, Margaret Sunde, Denise Galatis, Nicholas Williamson, Colin L Masters, Robin F Anders, Carol V Robinson, Roberto Cappai, John Carver, Interaction Molecular Chaperone αB-Crystallin α-Synuclein: Effects Amyloid Fibril Formation Chaperone Activity, Journal Molecular Biology 2004 (doi: 10.1016/j.jmb.2004.05.054). Raimon Sabaté, Alba Espargaró, Natalia S. de Groot, Juan José Valle-Delgado, Xavier Fernàndez-Busquets, Salvador Ventura, Role Protein Sequence Amino Acid Composition Amyloid Formation: Scrambling Backward Reading IAPP Amyloid Fibrils, Journal Molecular Biology 2010 (doi: 10.1016/j.jmb.2010.09.052). Timothy R Sampson, Collin Challis, Neha Jain, Anastasiya Moiseyenko, Mark S Ladinsky, Gauri G Shastri, Taren Thron, Brittany D Needham, Istvan Horvath, Justine W Debelius, Stefan Janssen, Rob Knight, Pernilla Wittung-Stafshede, Viviana Gradinaru, Matthew Chapman, Sarkis K Mazmanian, gut bacterial amyloid promotes α-synuclein aggregation motor impairment mice, eLife 2020 (doi: 10.7554/elife.53111). Hiromi M. Sanders, Robert Lust, Jan K. Teller, Amyloid-beta peptide Aβp3-42 affects early aggregation full-length Aβ1-42, Peptides 2009 (doi: 10.1016/j.peptides.2009.01.027). Puttur Santhoshkumar, Murugesan Raju, K. Krishna Sharma, αA-Crystallin Peptide 66SDRDKFVIFLDVKHF80 Accumulating Aging Lens Impairs Function α-Crystallin Induces Lens Protein Aggregation, PLoS ONE 2011 (doi: 10.1371/journal.pone.0019291). Puttur Santhoshkumar, Krishna K. Sharma, Inhibition amyloid fibrillogenesis toxicity peptide chaperone, Molecular Cellular Biochemistry 2004 (doi: 10.1023/b:mcbi.0000049373.15558.b8). Magdalena Sastre, Miguel Calero, Monika Pawlik, Paul M Mathews, Asok Kumar, Vlatko Danilov, Stephen D Schmidt, Ralph Nixon, Blas Frangione, Efrat Levy, Binding cystatin C Alzheimer’s amyloid β inhibits vitro amyloid fibril formation, Neurobiology Aging 2004 (doi: 10.1016/j.neurobiolaging.2003.11.006). Anna Schimansky, Jay Kant Yadav, Amyloid cross-sequence interaction Aβ(1‐40) αA(66–80) relation pathogenesis cataract, International Journal Biological Macromolecules 2021 (doi: 10.1016/j.ijbiomac.2021.02.111). Hamed Shaykhalishahi, Aziz Gauhar, Michael M. Wördehoff, Clara S. R. Grüning, Antonia N. Klein, Oliver Bannach, Matthias Stoldt, Dieter Willbold, Torleif Härd, Wolfgang Hoyer, Contact β1 β2 Segments α-Synuclein Inhibits Amyloid Formation, Angewandte Chemie International Edition 2015 (doi: 10.1002/anie.201503018). Yao-Hsiang Shih, Ling-Hsien Tu, Ting-Yu Chang, Kiruthika Ganesan, Wei-Wei Chang, Pao-Sheng Chang, Yu-Sheng Fang, Yeh-Tung Lin, Lee-Way Jin, Yun-Ru Chen, TDP-43 interacts amyloid-β, inhibits fibrillization, worsens pathology model Alzheimer’s disease, Nature Communications 2020 (doi: 10.1038/s41467-020-19786-7). Maki Shirasaka, Kazuo Kuwata, Ryo Honda, α-Synuclein chaperone suppresses nucleation amyloidogenesis prion protein, Biochemical Biophysical Research Communications 2020 (doi: 10.1016/j.bbrc.2019.10.120). Arshdeep Sidhu, Ine Segers-Nolten, Vinod Subramaniam, Conformational Compatibility Essential Heterologous Aggregation α-Synuclein, ACS Chemical Neuroscience 2016 (doi: 10.1021/acschemneuro.5b00322). Kalkena Sivanesam, Niels H. Andersen, Inhibition Human Amylin Amyloidogenesis Human Amylin-Fragment Peptides: Exploring Effects Serine Residues Oligomerization upon Inhibitory Potency, Biochemistry 2017 (doi: 10.1021/acs.biochem.7b00739). Tomas Sneideris, Mantas Ziaunys, Brett K.-Y. Chu, Rita P.-Y. Chen, Vytautas Smirnovas, Self-Replication Prion Protein Fragment 89-230 Amyloid Fibrils Accelerated Prion Protein Fragment 107-143 Aggregates, International Journal Molecular Sciences 2020 (doi: 10.3390/ijms21197410). Zachary . Sorrentino, Niran Vijayaraghavan, Kimberly-Marie Gorion, Cara J. Riffe, Kevin H. Strang, Jason Caldwell, Benoit . Giasson, Physiological C-terminal truncation α-synuclein potentiates prion-like formation pathological inclusions, Journal Biological Chemistry 2018 (doi: 10.1074/jbc.ra118.005603). Ewelina Stefaniak, Elena Atrian‐Blasco, Wojciech Goch, Laurent Sabater, Christelle Hureau, Wojciech Bal, Aggregation Pattern Aβ 1–40 Altered Presence N ‐Truncated Aβ 4–40 /Cu II Similar Way Ionic Interactions, Chemistry – European Journal 2021 (doi: 10.1002/chem.202004484). Weronika Surmacz-Chwedoruk, Hanna Nieznańska, Sławomir Wójcik, Wojciech Dzwolak, Cross-Seeding Fibrils Two Types Insulin Induces New Amyloid Strains, Biochemistry 2012 (doi: 10.1021/bi301144d). Olga Szczepankiewicz, Björn Linse, Georg Meisl, Eva Thulin, Birgitta Frohm, Carlo Sala Frigerio, Michael T. Colvin, Angela C. Jacavone, Robert G. Griffin, Tuomas Knowles, Dominic M. Walsh, Sara Linse, N-Terminal Extensions Retard Aβ42 Fibril Formation Allow Cross-Seeding Coaggregation Aβ42, Journal American Chemical Society 2015 (doi: 10.1021/jacs.5b07849). Makoto Terada, Genjiro Suzuki, Takashi Nonaka, Fuyuki Kametani, Akira Tamaoka, Masato Hasegawa, effect truncation prion-like properties α-synuclein, Journal Biological Chemistry 2018 (doi: 10.1074/jbc.ra118.001862). Joyce Tran, Dennis Chang, Frederick Hsu, Hongsu Wang, Zhefeng Guo, Cross-seeding Aβ40 Aβ42 Alzheimer’s disease, FEBS Letters 2016 (doi: 10.1002/1873-3468.12526). Igor F. Tsigelny, Leslie Crews, Paula Desplats, Gideon M. Shaked, Yuriy Sharikov, Hideya Mizuno, Brian Spencer, Edward Rockenstein, Margarita Trejo, Oleksandr Platoshyn, Jason X.-J. Yuan, Eliezer Masliah, Mechanisms Hybrid Oligomer Formation Pathogenesis Combined Alzheimer’s Parkinson’s Diseases, PLoS ONE 2008 (doi: 10.1371/journal.pone.0003135). Jonathan Vaneyck, Ine Segers-Nolten, Kerensa Broersen, Mireille M..E. Claessens, Cross-seeding alpha-synuclein aggregation amyloid fibrils food proteins, Journal Biological Chemistry 2021 (doi: 10.1016/j.jbc.2021.100358). David L Vanik, Krystyna Surewicz, Witold K Surewicz, Molecular Basis Barriers Interspecies Transmissibility Mammalian Prions, Molecular Cell 2004 (doi: 10.1016/s1097-2765(04)00155-8). Bruno Vasconcelos, Ilie-Cosmin Stancu, Arjan Buist, Matthew Bird, Peng Wang, Alexandre Vanoosthuyse, Kristof Van Kolen, Verheyen, Pascal Kienlen-Campard, Jean-Noël Octave, Peter Baatsen, Diederik Moechars, Ilse Dewachter, Heterotypic seeding Tau fibrillization pre-aggregated Abeta provides potent seeds prion-like seeding propagation Tau-pathology vivo, Acta Neuropathologica 2016 (doi: 10.1007/s00401-015-1525-x). Yakov . Vitrenko, Elena O. Gracheva, Janet E. Richmond, Susan W. Liebman, Visualization Aggregation Rnq1 Prion Domain Cross-seeding Interactions Sup35NM, Journal Biological Chemistry 2007 (doi: 10.1074/jbc.m609269200). Cecilia Wallin, Yoshitaka Hiruma, Sebastian K. T. S. Wärmländer, Isabelle Huvent, Jüri Jarvet, Jan Pieter Abrahams, Astrid Gräslund, Guy Lippens, Jinghui Luo, Neuronal Tau Protein Blocks Vitro Fibrillation Amyloid-β (Aβ) Peptide Oligomeric Stage, Journal American Chemical Society 2018 (doi: 10.1021/jacs.7b13623). Chao Wang, Alexey G. Klechikov, Anna L. Gharibyan, Sebastian K. T. S. Wärmländer, Jüri Jarvet, Lina Zhao, Xueen Jia, S. K. Shankar, Anders Olofsson, Thomas Brännström, Yuguang Mu, Astrid Gräslund, Ludmilla . Morozova-Roche, role pro-inflammatory S100A9 Alzheimer’s disease amyloid-neuroinflammatory cascade, Acta Neuropathologica 2013 (doi: 10.1007/s00401-013-1208-4). GuoZhen Wang, Alan R. Fersht, Propagation aggregated p53: Cross-reaction coaggregation vs. seeding, Proceedings National Academy Sciences 2015 (doi: 10.1073/pnas.1500262112). Hui Wang, Daniel P. Raleigh, Ability Insulin Inhibit Formation Amyloid Pro-Islet Amyloid Polypeptide Processing Intermediates Significantly Reduced Presence Sulfated Glycosaminoglycans, Biochemistry 2014 (doi: 10.1021/bi4015488). Sanduni Wasana Jayaweera, Solmaz Surano, Nina Pettersson, Elvira Oskarsson, Lovisa Lettius, Anna Gharibyan, Intissar Anan, Anders Olofsson, Mechanisms Transthyretin Inhibition IAPP Amyloid Formation, Biomolecules 2021 (doi: 10.3390/biom11030411). Takahiro Watanabe-Nakayama, Maika Nawa, Hiroki Konno, Noriyuki Kodera, Toshio Ando, David B. Teplow, Kenjiro Ono, Self- Cross-Seeding α-Synuclein Fibril Growth Kinetics Structure Observed High-Speed Atomic Force Microscopy, ACS Nano 2020 (doi: 10.1021/acsnano.0c03074). Elisa . Waxman, Benoit . Giasson, Induction Intracellular Tau Aggregation Promoted α-Synuclein Seeds Provides Novel Insights Hyperphosphorylation Tau, Journal Neuroscience 2011 (doi: 10.1523/jneurosci.0297-11.2011). Tanja Weiffert, Georg Meisl, Patrick Flagmeier, Suman De, Christopher J. R. Dunning, Birgitta Frohm, Henrik Zetterberg, Kaj Blennow, Erik Portelius, David Klenerman, Christopher M. Dobson, Tuomas P. J. Knowles, Sara Linse, Increased Secondary Nucleation Underlies Accelerated Aggregation Four-Residue N-Terminally Truncated Aβ42 Species Aβ5–42, ACS Chemical Neuroscience 2019 (doi: 10.1021/acschemneuro.8b00676). Tony Werner, Ranjeet Kumar, Istvan Horvath, Nathalie Scheers, Pernilla Wittung-Stafshede, Abundant fish protein inhibits α-synuclein amyloid formation, Scientific Reports 2018 (doi: 10.1038/s41598-018-23850-0). Gunilla T. Westermark, Per Westermark, Transthyretin Amyloid Islets Langerhans Type-2 Diabetes, Experimental Diabetes Research 2008 (doi: 10.1155/2008/429274). Hanna Willander, Jenny Presto, Glareh Askarieh, Henrik Biverstål, Birgitta Frohm, Stefan D. Knight, Jan Johansson, Sara Linse, BRICHOS Domains Efficiently Delay Fibrillation Amyloid β-Peptide, Journal Biological Chemistry 2012 (doi: 10.1074/jbc.m112.393157). Jonathan K. Williams, Xue Yang, Tamr B. Atieh, Michael P. Olson, Sagar D. Khare, Jean Baum, Multi-Pronged Interactions Underlie Inhibition α-Synuclein Aggregation β-Synuclein, Journal Molecular Biology 2018 (doi: 10.1016/j.jmb.2018.05.024). Hisashi Yagi, Eiko Kusaka, Kunihiro Hongo, Tomohiro Mizobata, Yasushi Kawata, Amyloid Fibril Formation α-Synuclein Accelerated Preformed Amyloid Seeds Proteins, Journal Biological Chemistry 2005 (doi: 10.1074/jbc.m508623200). Takahiro Yamaguchi, Katsumi Matsuzaki, Masaru Hoshino, Interaction soluble Aβ-(1-40) monomer Aβ-(1-42) fibrils probed paramagnetic relaxation enhancement, FEBS Letters 2013 (doi: 10.1016/j.febslet.2013.02.008). Li-Mei Yan, Aleksandra Velkova, Marianna Tatarek-Nossol, Erika Andreetto, Aphrodite Kapurniotu, IAPP Mimic Blocks Aβ Cytotoxic Self-Assembly: Cross-Suppression Amyloid Toxicity Aβ IAPP Suggests Molecular Link Alzheimer’s Disease Type II Diabetes, Angewandte Chemie International Edition 2007 (doi: 10.1002/anie.200604056). Li-Mei Yan, Marianna Tatarek-Nossol, Aleksandra Velkova, Athanasios Kazantzis, Aphrodite Kapurniotu, Design mimic nonamyloidogenic bioactive human islet amyloid polypeptide (IAPP) nanomolar affinity inhibitor IAPP cytotoxic fibrillogenesis, Proceedings National Academy Sciences 2006 (doi: 10.1073/pnas.0507471103). Li-Mei Yan, Aleksandra Velkova, Marianna Tatarek-Nossol, Gerhard Rammes, Andrei Sibaev, Erika Andreetto, Michael Kracklauer, Maria Bakou, Eleni Malideli, Burkhard Göke, Jörg Schirra, Martin Storr, Aphrodite Kapurniotu, Selectively N-Methylated Soluble IAPP Mimics Potent IAPP Receptor Agonists Nanomolar Inhibitors Cytotoxic Self-Assembly IAPP Aβ40, Angewandte Chemie International Edition 2013 (doi: 10.1002/anie.201302840). Motokuni Yonetani, Takashi Nonaka, Masami Masuda, Yuki Inukai, Takayuki Oikawa, Shin-ichi Hisanaga, Masato Hasegawa, Conversion Wild-type α-Synuclein Mutant-type Fibrils Propagation Presence A30P Mutant, Journal Biological Chemistry 2009 (doi: 10.1074/jbc.m807482200). Brian K. Yoo, Yiling Xiao, Dan McElheny, Yoshitaka Ishii, E22G Pathogenic Mutation β-Amyloid (Aβ) Enhances Misfolding Aβ40 Unexpected Prion-like Cross Talk Aβ42 Aβ40, Journal American Chemical Society 2018 (doi: 10.1021/jacs.7b13660). Nadine D. Younan, Ko-Fan Chen, Ruth-Sarah Rose, Damian C. Crowther, John H. Viles, Prion protein stabilizes amyloid-β (Aβ) oligomers enhances Aβ neurotoxicity Drosophila model Alzheimer’s disease, Journal Biological Chemistry 2018 (doi: 10.1074/jbc.ra118.003319). Nadine D. Younan, Claire J. Sarell, Paul Davies, David R. Brown, John H. Viles, cellular prion protein traps Alzheimer’s Aβ oligomeric form disassembles amyloid fibers, FASEB Journal 2013 (doi: 10.1096/fj.12-222588). Lydia M. Young, Ling-Hsien Tu, Daniel P. Raleigh, Alison E. Ashcroft, Sheena E. Radford, Understanding co-polymerization amyloid formation direct observation mixed oligomers, Chemical Science 2017 (doi: 10.1039/c7sc00620a). Keisuke Yuzu, Naoki Yamamoto, Masahiro Noji, Masatomo , Yuji Goto, Tetsushi Iwasaki, Motonari Tsubaki, Eri Chatani, Multistep Changes Amyloid Structure Induced Cross-Seeding Rugged Energy Landscape, Biophysical Journal 2021 (doi: 10.1016/j.bpj.2020.12.005). Masihuz Zaman, Maria Andreasen, Cross-talk individual phenol-soluble modulins Staphylococcus aureus biofilm enables rapid efficient amyloid formation, eLife 2020 (doi: 10.7554/elife.59776). Ce Zhang, Yonggang Liu, Jonathan Gilthorpe, Johan R. C. van der Maarel, MRP14 (S100A9) Protein Interacts Alzheimer Beta-Amyloid Peptide Induces Fibrillization, PLoS ONE 2012 (doi: 10.1371/journal.pone.0032953). Yanxian Zhang, Mingzhen Zhang, Yonglan Liu, Dong Zhang, Yijing Tang, Baiping Ren, Jie Zheng, Dual amyloid cross-seeding reveals steric zipper-facilitated fibrillization pathological links protein misfolding diseases, Journal Materials Chemistry B 2021 (doi: 10.1039/d0tb02958k). Li Na Zhao, Tong Zhang, Ce Zhang, Chao Wang, Ludmilla . Morozova-Roche, Lock Yue Chew, Yuguang Mu, S100A9 induces aggregation-prone conformation Abeta peptides: combined experimental simulation study, RSC Advances 2013 (doi: 10.1039/c3ra43665a). Yizhou Zhou, Daniel Smith, Bryan J. Leong, Kristoffer Brännström, Fredrik Almqvist, Matthew R. Chapman, Promiscuous Cross-seeding Bacterial Amyloids Promotes Interspecies Biofilms, Journal Biological Chemistry 2012 (doi: 10.1074/jbc.m112.383737). Mantas Ziaunys, Andrius Sakalauskas, Tomas Sneideris, Vytautas Smirnovas, Lysozyme Fibrils Alter Mechanism Insulin Amyloid Aggregation, International Journal Molecular Sciences 2021 (doi: 10.3390/ijms22041775).","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Michal Burdukiewicz. Maintainer, author. Dominik Rafacz. Contributor. Laura Bakala. Contributor.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Burdukiewicz M, Rafacz D, Barbach , Hubicka K, Bąkała L, Lassota , Stecko J, Szymańska N, Wojciechowski J, Kozakiewicz D, Szulc N, Chilimoniuk J, Jęśkowiak , Gąsior-Głogowska M, Kotulska M (2023). “AmyloGraph: Comprehensive Database Amyloid-Amyloid Interactions.” Nucleic Acids Research, 51(D1), D352-D357. ISSN 0305-1048, doi:10.1093/nar/gkac882.","code":"@Article{,   title = {AmyloGraph: A Comprehensive Database of Amyloid-Amyloid Interactions},   author = {Michał Burdukiewicz and Dominik Rafacz and Agnieszka Barbach and Katarzyna Hubicka and Laura Bąkała and Anna Lassota and Jakub Stecko and Natalia Szymańska and Jakub W. Wojciechowski and Dominika Kozakiewicz and Natalia Szulc and Jarosław Chilimoniuk and Izabela Jęśkowiak and Marlena Gąsior-Głogowska and Małgorzata Kotulska},   year = {2023},   journal = {Nucleic Acids Research},   volume = {51},   number = {D1},   pages = {D352-D357},   issn = {0305-1048},   doi = {10.1093/nar/gkac882}, }"},{"path":"https://github.com/KotulskaLab/AmyloGraph/index.html","id":"amylograph","dir":"","previous_headings":"","what":"AmyloGraph: a comprehensive database of amyloid-amyloid interactions","title":"AmyloGraph: a comprehensive database of amyloid-amyloid interactions","text":"AmyloGraph database interactions amyloid proteins. Curators AmyloGraph manually gather data published research literature community data submissions. learn AmyloGraph, usage process data curation, visit online manual. AmyloGraph available online database http://AmyloGraph.com/, functionalities also accessible R package.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/index.html","id":"run-amylograph-locally","dir":"","previous_headings":"","what":"Run AmyloGraph locally","title":"AmyloGraph: a comprehensive database of amyloid-amyloid interactions","text":"can install development version GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"KotulskaLab/AmyloGraph\") # then run AmyloGraph using library(AmyloGraph) AmyloGraph()"},{"path":"https://github.com/KotulskaLab/AmyloGraph/index.html","id":"frequently-asked-questions","dir":"","previous_headings":"","what":"Frequently asked questions","title":"AmyloGraph: a comprehensive database of amyloid-amyloid interactions","text":"can submit data? submission form available online. interactions reported publications wrongly annotated? try best implementing rigorous transparent two-step data curation procedure, despite measures, still prone errors. Please send email Michal Burdukiewicz correctly annotated interactions. Remember mention AmyloGraph IDs.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"AmyloGraph: a comprehensive database of amyloid-amyloid interactions","text":"Burdukiewicz M, Rafacz D, Barbach , Hubicka K, Bakala L, Lassota , Stecko J, Szymanska N, Wojciechowski J, Kozakiewicz D, Szulc N, Chilimoniuk J, Jeskowiak , Gasior-Glogowska M, Kotulska M (2022). AmyloGraph: comprehensive database amyloid-amyloid interactions. Nucleic Acid Research, 10.1093/nar/gkac882.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/index.html","id":"contact","dir":"","previous_headings":"","what":"Contact","title":"AmyloGraph: a comprehensive database of amyloid-amyloid interactions","text":"general questions problems data database, please email Michal Burdukiewicz.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/index.html","id":"video-tutorial","dir":"","previous_headings":"","what":"Video tutorial","title":"AmyloGraph: a comprehensive database of amyloid-amyloid interactions","text":"learn AmyloGraph, watch introductory video:","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/index.html","id":"acknowledgements","dir":"","previous_headings":"","what":"Acknowledgements","title":"AmyloGraph: a comprehensive database of amyloid-amyloid interactions","text":"AmyloGraph partially supported grant . 2019/35/B/NZ2/03997 (National Science Center) Małgorzata Kotulska. Access Wroclaw Centre Networking Supercomputing Wroclaw University Science Technology greatly acknowledged. also thank Daniel Otzen (Aarhus University, Denmark) Vytautas Smirnovas (University Vilnus, Lithuania) fruitful discussions.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/AGID_button.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate AGID buttons — AGID_button","title":"Generate AGID buttons — AGID_button","text":"Generates vector AGID buttons, AGID codes labels buttons. button sets selected_interaction value respective AGID click.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/AGID_button.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate AGID buttons — AGID_button","text":"","code":"AGID_button(interaction_ids)"},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/AGID_button.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate AGID buttons — AGID_button","text":"interaction_ids [character()] AGIDs use buttons.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/AGID_button.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate AGID buttons — AGID_button","text":"character vector length interaction_ids, element string representation button.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/GoogleAnalytics.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Google Analytics to shiny app — GoogleAnalytics","title":"Add Google Analytics to shiny app — GoogleAnalytics","text":"Includes <head> <body> tags Google Analytics cookies scripts. Adapted : https://github.com/DataScienceScotland/shiny_cookies.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/GoogleAnalytics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Google Analytics to shiny app — GoogleAnalytics","text":"","code":"GoogleAnalytics()"},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/GoogleAnalytics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Google Analytics to shiny app — GoogleAnalytics","text":"list tags place inside shiny app.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/HTML_download_handler.html","id":null,"dir":"Reference","previous_headings":"","what":"Handle download of AmyloGraph network to HTML — HTML_download_handler","title":"Handle download of AmyloGraph network to HTML — HTML_download_handler","text":"Creates download handler can inserted app used download AmyloGraph network data HTML format.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/HTML_download_handler.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Handle download of AmyloGraph network to HTML — HTML_download_handler","text":"","code":"HTML_download_handler(node_positions)"},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/HTML_download_handler.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Handle download of AmyloGraph network to HTML — HTML_download_handler","text":"node_positions [reactive(data.frame())] Table node positions x, y, id columns. nodes [data.frame()] AmyloGraph node data. edges [data.frame()] AmyloGraph edge data.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/HTML_download_handler.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Handle download of AmyloGraph network to HTML — HTML_download_handler","text":"downloadHandler object.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/XGMML_download_handler.html","id":null,"dir":"Reference","previous_headings":"","what":"Handle download of AmyloGraph data to XGMML — XGMML_download_handler","title":"Handle download of AmyloGraph data to XGMML — XGMML_download_handler","text":"Creates download handler can inserted app used download AmyloGraph data XGMML format. proteins used nodes, even interactions filtered .","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/XGMML_download_handler.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Handle download of AmyloGraph data to XGMML — XGMML_download_handler","text":"","code":"XGMML_download_handler(edges)"},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/XGMML_download_handler.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Handle download of AmyloGraph data to XGMML — XGMML_download_handler","text":"edges [reactivevalues()] AmyloGraph data \"table\" element.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/XGMML_download_handler.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Handle download of AmyloGraph data to XGMML — XGMML_download_handler","text":"downloadHandler object.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/add_none.html","id":null,"dir":"Reference","previous_headings":"","what":"Add NULL to choices — add_none","title":"Add NULL to choices — add_none","text":"Adds string-encoded NULL labeled \"none\" vector choices. due NULL able element vector.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/add_none.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add NULL to choices — add_none","text":"","code":"add_none(choices)"},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/add_none.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add NULL to choices — add_none","text":"choices [character()] Choices augment NULL.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/add_none.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add NULL to choices — add_none","text":"character vector NULL option prepended choices.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/add_sequence_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Add sequence info — add_sequence_info","title":"Add sequence info — add_sequence_info","text":"Prepends sequence indices sequence length chain name (applicable).","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/add_sequence_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add sequence info — add_sequence_info","text":"","code":"add_sequence_info(content, seq_length, name)"},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/add_sequence_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add sequence info — add_sequence_info","text":"content [character(1)] Sequence indices newlines. seq_length [integer(1)] Length sequence. name [character(1)] Chain name, may NA applicable.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/add_sequence_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add sequence info — add_sequence_info","text":"single string info prepended separated newlines.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/ag_colnames.html","id":null,"dir":"Reference","previous_headings":"","what":"Find AmyloGraph column names in data — ag_colnames","title":"Find AmyloGraph column names in data — ag_colnames","text":"Filters column names data frame matrix fulfill custom role AmyloGraph, like \"interactor name\".","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/ag_colnames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find AmyloGraph column names in data — ag_colnames","text":"","code":"ag_colnames(data)"},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/ag_colnames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find AmyloGraph column names in data — ag_colnames","text":"data [data.frame()] Data, column names filtered.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/ag_colnames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find AmyloGraph column names in data — ag_colnames","text":"string vector filtered column names.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/ag_data_interactions.html","id":null,"dir":"Reference","previous_headings":"","what":"AmyloGraph interactions list — ag_data_interactions","title":"AmyloGraph interactions list — ag_data_interactions","text":"AmyloGraph interactions list","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/ag_data_interactions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"AmyloGraph interactions list — ag_data_interactions","text":"","code":"ag_data_interactions"},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/ag_data_interactions.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"AmyloGraph interactions list — ag_data_interactions","text":"object class tbl_df (inherits tbl, data.frame) 896 rows 16 columns.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/ag_data_interactions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"AmyloGraph interactions list — ag_data_interactions","text":"data.frame coming interactions_data.csv file following changes: from_id to_id unique hashes interactor interactee names, interactor_sequence interactee_sequence transformed read_chains() vector tibbles.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/ag_data_nodes.html","id":null,"dir":"Reference","previous_headings":"","what":"Build list of proteins from interactions list — ag_data_nodes","title":"Build list of proteins from interactions list — ag_data_nodes","text":"Build list proteins interactions list","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/ag_data_nodes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build list of proteins from interactions list — ag_data_nodes","text":"","code":"ag_data_nodes"},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/ag_data_nodes.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Build list of proteins from interactions list — ag_data_nodes","text":"object class tbl_df (inherits tbl, data.frame) 46 rows 3 columns.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/ag_data_nodes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build list of proteins from interactions list — ag_data_nodes","text":"data.frame list proteins interact others, described label (human-readable name), id (machine-readable name), shape (purpose drawing graph ).","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/ag_data_proteins.html","id":null,"dir":"Reference","previous_headings":"","what":"AmyloGraph proteins list — ag_data_proteins","title":"AmyloGraph proteins list — ag_data_proteins","text":"AmyloGraph proteins list","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/ag_data_proteins.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"AmyloGraph proteins list — ag_data_proteins","text":"","code":"ag_data_proteins"},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/ag_data_proteins.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"AmyloGraph proteins list — ag_data_proteins","text":"object class tbl_df (inherits tbl, data.frame) 78 rows 4 columns.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/ag_data_proteins.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"AmyloGraph proteins list — ag_data_proteins","text":"data.frame coming protein_data.csv file following changes: id contains unique hashes protein names.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/ag_data_references.html","id":null,"dir":"Reference","previous_headings":"","what":"AmyloGraph references list — ag_data_references","title":"AmyloGraph references list — ag_data_references","text":"AmyloGraph references list","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/ag_data_references.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"AmyloGraph references list — ag_data_references","text":"","code":"ag_data_references"},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/ag_data_references.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"AmyloGraph references list — ag_data_references","text":"object class spec_tbl_df (inherits tbl_df, tbl, data.frame) 171 rows 6 columns.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/ag_data_references.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"AmyloGraph references list — ag_data_references","text":"data.frame coming reference_table.csv file changes.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/ag_option.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract AmyloGraph option — ag_option","title":"Extract AmyloGraph option — ag_option","text":"function accesses current value selected AmyloGraph option.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/ag_option.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract AmyloGraph option — ag_option","text":"","code":"ag_option(option)"},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/ag_option.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract AmyloGraph option — ag_option","text":"option [character(1)] Option name without leading \"ag-\".","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/ag_option.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract AmyloGraph option — ag_option","text":"Option value.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/ag_option.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract AmyloGraph option — ag_option","text":"currently available options : str_null palette side_panel_width main_panel_width colnames interaction_attrs center_network sequence_group_length chain_separator","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/citify.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate paper citation — citify","title":"Generate paper citation — citify","text":"function formats paper reference data human-friendly format, akin one used formatting citations.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/citify.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate paper citation — citify","text":"","code":"citify(reference)"},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/citify.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate paper citation — citify","text":"reference [character matrix(1, )] Paper citation data following columns: all_names, title, journal, year, doi.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/citify.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate paper citation — citify","text":"single string well-formatted citation.","code":""},{"path":[]},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/collect_tags.html","id":null,"dir":"Reference","previous_headings":"","what":"Collect button tags — collect_tags","title":"Collect button tags — collect_tags","text":"functions collects unique tags assigned supplied buttons.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/collect_tags.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collect button tags — collect_tags","text":"","code":"collect_tags(buttons)"},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/collect_tags.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collect button tags — collect_tags","text":"buttons [ag_button()] Buttons whose tags collect.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/collect_tags.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collect button tags — collect_tags","text":"vector tags (character vector).","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/color_by_attribute.html","id":null,"dir":"Reference","previous_headings":"","what":"Add colors depending on attribute value — color_by_attribute","title":"Add colors depending on attribute value — color_by_attribute","text":"Add colors depending attribute value","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/color_by_attribute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add colors depending on attribute value — color_by_attribute","text":"","code":"color_by_attribute(data, group)"},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/color_by_attribute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add colors depending on attribute value — color_by_attribute","text":"data [tibble()] Data modify. group [character(1)] Name currently selected attribute (none, empty string).","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/color_by_attribute.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add colors depending on attribute value — color_by_attribute","text":"tibble additional color column character type.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/contains_motif.html","id":null,"dir":"Reference","previous_headings":"","what":"Check whether sequences fit motif — contains_motif","title":"Check whether sequences fit motif — contains_motif","text":"Compare sequence motif. Motif patternized making comparisons.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/contains_motif.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check whether sequences fit motif — contains_motif","text":"","code":"contains_motif(sequences, motif)"},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/contains_motif.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check whether sequences fit motif — contains_motif","text":"sequences [list()] Sequences check, element tibble name sequence columns. motif [character(1)] Motif look sequences.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/contains_motif.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check whether sequences fit motif — contains_motif","text":"logical vector length sequences vector, element showing whether motif found sequence.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/correct_motif.html","id":null,"dir":"Reference","previous_headings":"","what":"Check motif correctness — correct_motif","title":"Check motif correctness — correct_motif","text":"Validates motif regex.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/correct_motif.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check motif correctness — correct_motif","text":"","code":"correct_motif(motif)"},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/correct_motif.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check motif correctness — correct_motif","text":"motif [character(1)] Motif check.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/correct_motif.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check motif correctness — correct_motif","text":"single logical value.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/count-unique-interacts.html","id":null,"dir":"Reference","previous_headings":"","what":"Count unique interacting proteins — count_unique_interactors","title":"Count unique interacting proteins — count_unique_interactors","text":"Counts number unique interactors/interactees AmyloGraph database given protein.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/count-unique-interacts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count unique interacting proteins — count_unique_interactors","text":"","code":"count_unique_interactors(protein_id)  count_unique_interactees(protein_id)"},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/count-unique-interacts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count unique interacting proteins — count_unique_interactors","text":"protein_id [character(1)] ID protein interactions counted . interactions [data.frame()] AmyloGraph interaction data.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/count-unique-interacts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count unique interacting proteins — count_unique_interactors","text":"integer count distinct protein interacting.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/count_interactions.html","id":null,"dir":"Reference","previous_headings":"","what":"Count interactions for a protein — count_interactions","title":"Count interactions for a protein — count_interactions","text":"Counts number interactions AmyloGraph database given protein.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/count_interactions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count interactions for a protein — count_interactions","text":"","code":"count_interactions(protein_id)"},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/count_interactions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count interactions for a protein — count_interactions","text":"protein_id [character(1)] ID protein interactions counted . interactions [data.frame()] AmyloGraph interaction data.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/count_interactions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count interactions for a protein — count_interactions","text":"integer count interactions.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/define_button.html","id":null,"dir":"Reference","previous_headings":"","what":"Define a button type — define_button","title":"Define a button type — define_button","text":"Defines button type visible component, server logic, tags.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/define_button.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define a button type — define_button","text":"","code":"define_button(ui, server, tags = NULL)"},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/define_button.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define a button type — define_button","text":"ui [function()] Mostly HTML part button generated initialization button instance. Must contain ns parameter. server [function()] Server logic handles button-related actions. Must contain input output parameters. tags [character()] Categories apply button type (defined BUTTON_TAGS).","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/define_button.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define a button type — define_button","text":"ag_button object.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/deparse_chains.html","id":null,"dir":"Reference","previous_headings":"","what":"Revert chain tibbles to strings — deparse_chains","title":"Revert chain tibbles to strings — deparse_chains","text":"Deparses chain data tibbles back strings, depending structure tibble; plain sequence one row name column NA, FASTA-like format otherwise.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/deparse_chains.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Revert chain tibbles to strings — deparse_chains","text":"","code":"deparse_chains(tbl_sq, separator = ag_option(\"chain_separator\"))"},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/deparse_chains.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Revert chain tibbles to strings — deparse_chains","text":"tbl_sq [tibble()] Sequence data one protein. separator [character(1)] character string join lines data .","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/deparse_chains.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Revert chain tibbles to strings — deparse_chains","text":"character vector FASTA-like entries plain sequences.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/empty_buffer.html","id":null,"dir":"Reference","previous_headings":"","what":"Flush chain reader buffer — empty_buffer","title":"Flush chain reader buffer — empty_buffer","text":"Move chain data (name sequence) buffer result storage.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/empty_buffer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flush chain reader buffer — empty_buffer","text":"","code":"empty_buffer(reader)"},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/empty_buffer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flush chain reader buffer — empty_buffer","text":"reader [AG_sequence_reader(1)] Sequence reader buffer empty.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/empty_buffer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Flush chain reader buffer — empty_buffer","text":"AG_sequence_reader empty buffer additional sequence data.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/filter_by_attribute.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter by an attribute — filter_by_attribute","title":"Filter by an attribute — filter_by_attribute","text":"Filters data attribute answer.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/filter_by_attribute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter by an attribute — filter_by_attribute","text":"","code":"filter_by_attribute(data, values)"},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/filter_by_attribute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter by an attribute — filter_by_attribute","text":"data [tibble()] Data modify. values [ag_attr_values()] Attribute filter values keep.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/filter_by_attribute.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter by an attribute — filter_by_attribute","text":"tibble filtered observations.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/filter_by_motif.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter by motif — filter_by_motif","title":"Filter by motif — filter_by_motif","text":"Filters data motif. Either interactor_sequence interactee_sequence must contain given motif.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/filter_by_motif.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter by motif — filter_by_motif","text":"","code":"filter_by_motif(data, motif)"},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/filter_by_motif.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter by motif — filter_by_motif","text":"data [tibble()] Data modify. motif [ag_motif(1)] Motif filter .","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/filter_by_motif.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter by motif — filter_by_motif","text":"tibble filtered observations.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/group_by_attribute.html","id":null,"dir":"Reference","previous_headings":"","what":"Group data by attribute value — group_by_attribute","title":"Group data by attribute value — group_by_attribute","text":"Groups interaction data start end nodes, attribute value (applicable). Generates edge labels DOIs given group.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/group_by_attribute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Group data by attribute value — group_by_attribute","text":"","code":"group_by_attribute(data, group)"},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/group_by_attribute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Group data by attribute value — group_by_attribute","text":"data [tibble()] Data modify. group [character(1)] Name currently selected attribute (none, empty string).","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/group_by_attribute.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Group data by attribute value — group_by_attribute","text":"tibble observation corresponds single edge graph.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/if_null_else.html","id":null,"dir":"Reference","previous_headings":"","what":"Execute code if not NULL — if_null_else","title":"Execute code if not NULL — if_null_else","text":"Checks input value equality NULL executes code equality satisfied.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/if_null_else.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Execute code if not NULL — if_null_else","text":"","code":"if_null_else(value, code = identity, ...)"},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/if_null_else.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Execute code if not NULL — if_null_else","text":"value [] Value compare NULL. code [function(1)] Function takes value first (unnamed) parameter, executed value NULL. ... parameters passed code().","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/if_null_else.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Execute code if not NULL — if_null_else","text":"NULL input NULL, return value code() otherwise.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/index_line.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a line of indices — index_line","title":"Create a line of indices — index_line","text":"Creates vector left-padded strings indices indicated range.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/index_line.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a line of indices — index_line","text":"","code":"index_line(from, to, by)"},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/index_line.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a line of indices — index_line","text":"[integer(1)] First element sequence. [integer(1)] Last element sequence. [integer(1)] Size group padding length.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/index_line.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a line of indices — index_line","text":"vector strings, element number left-padded spaces.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/invert_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Swap values and names — invert_names","title":"Swap values and names — invert_names","text":"Swaps values names vector.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/invert_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Swap values and names — invert_names","text":"","code":"invert_names(value)"},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/invert_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Swap values and names — invert_names","text":"value [named vector()] Named vector elements coercible character vector, preferably strings.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/invert_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Swap values and names — invert_names","text":"character vector.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/is_node_selected.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if node is selected — is_node_selected","title":"Check if node is selected — is_node_selected","text":"Checks whether id contains data whether data equal str_null AG option.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/is_node_selected.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if node is selected — is_node_selected","text":"","code":"is_node_selected(id)"},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/is_node_selected.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if node is selected — is_node_selected","text":"id [character(0) | character(1)] Node ID verify.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/is_node_selected.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if node is selected — is_node_selected","text":"single logical value.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/label_and_order.html","id":null,"dir":"Reference","previous_headings":"","what":"Label and reorder a vector — label_and_order","title":"Label and reorder a vector — label_and_order","text":"Sets names vector reorders names sorted alphabetically.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/label_and_order.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Label and reorder a vector — label_and_order","text":"","code":"label_and_order(value, label)"},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/label_and_order.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Label and reorder a vector — label_and_order","text":"value [vector()] Values label reorder. label [character()] Names use labeling reordering.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/label_and_order.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Label and reorder a vector — label_and_order","text":"Reordered value vector names.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/linkify_doi.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrap DOI in a link — linkify_doi","title":"Wrap DOI in a link — linkify_doi","text":"Wraps DOI code HTML clickable link respective address doi.org. Allows displaying truncated DOI string instead full form.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/linkify_doi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrap DOI in a link — linkify_doi","text":"","code":"linkify_doi(doi, truncate = TRUE)"},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/linkify_doi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrap DOI in a link — linkify_doi","text":"doi [character()] DOI codes use (labels links). truncate [logical(1)] Whether displayed DOI code truncated first 18 characters.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/linkify_doi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrap DOI in a link — linkify_doi","text":"string vector length doi parameter, element <> tag respective DOI code.","code":""},{"path":[]},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/linkify_uniprot.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrap UniProt ID in a link — linkify_uniprot","title":"Wrap UniProt ID in a link — linkify_uniprot","text":"Wraps UniProt ID code HTML clickable link respective address uniprot.org.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/linkify_uniprot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrap UniProt ID in a link — linkify_uniprot","text":"","code":"linkify_uniprot(uniprot_id)"},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/linkify_uniprot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrap UniProt ID in a link — linkify_uniprot","text":"uniprot_id [character()] UniProt IDs use (labels links).","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/linkify_uniprot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrap UniProt ID in a link — linkify_uniprot","text":"string vector length uniprot_id parameter, element <> tag respective UniProt ID.","code":""},{"path":[]},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/load_js_code.html","id":null,"dir":"Reference","previous_headings":"","what":"Read JavaScript code from file — load_js_code","title":"Read JavaScript code from file — load_js_code","text":"Reads JS code inst/js folder inside AmyloGraph package.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/load_js_code.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read JavaScript code from file — load_js_code","text":"","code":"load_js_code(name)"},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/load_js_code.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read JavaScript code from file — load_js_code","text":"name [character(1)] File name without .js extension.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/load_js_code.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read JavaScript code from file — load_js_code","text":"single string JavaScript code extracted file.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/markdown_ag_version.html","id":null,"dir":"Reference","previous_headings":"","what":"Format AmyloGraph version into human-friendly string — markdown_ag_version","title":"Format AmyloGraph version into human-friendly string — markdown_ag_version","text":"function retrieves version number currently installed AmyloGraph package formats neatly looking sentence.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/markdown_ag_version.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format AmyloGraph version into human-friendly string — markdown_ag_version","text":"","code":"markdown_ag_version()"},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/markdown_ag_version.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format AmyloGraph version into human-friendly string — markdown_ag_version","text":"single string.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/md-section.html","id":null,"dir":"Reference","previous_headings":"","what":"Access AmyloGraph section as a string — markdown_description","title":"Access AmyloGraph section as a string — markdown_description","text":"function retrieves markdown string specific section.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/md-section.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Access AmyloGraph section as a string — markdown_description","text":"","code":"markdown_description()  markdown_faq()  markdown_download()  markdown_citation()  markdown_contact()  markdown_acknowledgements()  markdown_yttutorial()  markdown_images()"},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/md-section.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Access AmyloGraph section as a string — markdown_description","text":"single string.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/observe-disable-buttons.html","id":null,"dir":"Reference","previous_headings":"","what":"Observe buttons to disable/enable them — observe_download_buttons","title":"Observe buttons to disable/enable them — observe_download_buttons","text":"Toggles button based whether row selected table.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/observe-disable-buttons.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Observe buttons to disable/enable them — observe_download_buttons","text":"","code":"observe_download_buttons(ns, any_row_selected)  observe_deselect_buttons(ns, any_row_selected)"},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/observe-disable-buttons.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Observe buttons to disable/enable them — observe_download_buttons","text":"ns [function(1)] Namespace-generating function takes single string argument. any_row_selected [reactive(logical(1))] reactive value telling whether row selected table.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/observe_deselecting_all.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove selections in a table — observe_deselecting_all","title":"Remove selections in a table — observe_deselecting_all","text":"Sets selected rows none table response clicking button.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/observe_deselecting_all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove selections in a table — observe_deselecting_all","text":"","code":"observe_deselecting_all(input, button_id, table_proxy)"},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/observe_deselecting_all.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove selections in a table — observe_deselecting_all","text":"input [reactivevalues()] input object app module contains table. button_id [character(1)] ID button triggers removing selections. table_proxy [dataTableProxy(1)] Proxy table update.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/observe_edges_change.html","id":null,"dir":"Reference","previous_headings":"","what":"Observes graph edges changing — observe_edges_change","title":"Observes graph edges changing — observe_edges_change","text":"Observes graph edges changing","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/observe_edges_change.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Observes graph edges changing — observe_edges_change","text":"","code":"observe_edges_change(input, edges)"},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/observe_edges_change.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Observes graph edges changing — observe_edges_change","text":"input [reactivevalues()] input object app module contains graph. edges [reactivevalues()] AmyloGraph data \"graph\" element.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/observe_filter_active.html","id":null,"dir":"Reference","previous_headings":"","what":"Toggle active state of a filter checkbox — observe_filter_active","title":"Toggle active state of a filter checkbox — observe_filter_active","text":"Sets filter active state currently selected group equal filter's attribute.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/observe_filter_active.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Toggle active state of a filter checkbox — observe_filter_active","text":"","code":"observe_filter_active(group, attribute)"},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/observe_filter_active.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Toggle active state of a filter checkbox — observe_filter_active","text":"group [reactive(character(1))] Name currently selected attribute (none, empty string). attribute [character(1)] One interaction attributes, relevant observed filter.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/observe_interaction_selection.html","id":null,"dir":"Reference","previous_headings":"","what":"Display ","title":"Display ","text":"Updates tabset panel show \"Single interaction\" tab tab list moves user interaction selected. interaction deselected, hides tab moves user back graph.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/observe_interaction_selection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display ","text":"","code":"observe_interaction_selection(input)"},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/observe_interaction_selection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display ","text":"input [reactivevalues()] input object app.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/observe_moving_selection.html","id":null,"dir":"Reference","previous_headings":"","what":"Copy selections in subtables to main table — observe_moving_selection","title":"Copy selections in subtables to main table — observe_moving_selection","text":"\"select\" button click collects selected interactions subtables single protein panel. finds interactions main table sets selected rows . Lastly, moves user table tab.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/observe_moving_selection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copy selections in subtables to main table — observe_moving_selection","text":"","code":"observe_moving_selection(   input,   subtables,   edges,   table_proxy,   tabs_visited,   initial_selection )"},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/observe_moving_selection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copy selections in subtables to main table — observe_moving_selection","text":"input [reactivevalues()] input object app. subtables [codereactivevalues()] list two subtables interactions interactor interactee respectively. edges [reactivevalues()] AmyloGraph data \"table\" element. table_proxy [dataTableProxy(1)] Proxy main table (target table). rvals [reactivevalues] Reactive values handling problem setting selection table displayed previously.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/observe_node_selection.html","id":null,"dir":"Reference","previous_headings":"","what":"Display single protein panel on selection — observe_node_selection","title":"Display single protein panel on selection — observe_node_selection","text":"Displays panel details single protein protein (node) selected hides . Moreover, handles changes selected node graph.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/observe_node_selection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display single protein panel on selection — observe_node_selection","text":"","code":"observe_node_selection(input)"},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/observe_node_selection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display single protein panel on selection — observe_node_selection","text":"input [reactivevalues()] input object app.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/observe_select_in_table_button.html","id":null,"dir":"Reference","previous_headings":"","what":"Observe ","title":"Observe ","text":"Toggles button based whether row selected table.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/observe_select_in_table_button.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Observe ","text":"","code":"observe_select_in_table_button(ns, any_row_selected)"},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/observe_select_in_table_button.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Observe ","text":"ns [function(1)] Namespace-generating function takes single string argument. any_row_selected [reactive(logical(1))] reactive value telling whether row selected table.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/observe_selecting_all.html","id":null,"dir":"Reference","previous_headings":"","what":"Select all rows in a table — observe_selecting_all","title":"Select all rows in a table — observe_selecting_all","text":"Sets selected rows table response clicking button.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/observe_selecting_all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select all rows in a table — observe_selecting_all","text":"","code":"observe_selecting_all(input, button_id, table_proxy)"},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/observe_selecting_all.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select all rows in a table — observe_selecting_all","text":"input [reactivevalues()] input object app module contains table. button_id [character(1)] ID button triggers adding selections. table_proxy [dataTableProxy(1)] Proxy table update.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/patternize_motif.html","id":null,"dir":"Reference","previous_headings":"","what":"Upgrade motif to detect ambiguous letters — patternize_motif","title":"Upgrade motif to detect ambiguous letters — patternize_motif","text":"Replaces ambiguous letters (B, J, Z, X, *) set characters (e.g. B [BDN]).","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/patternize_motif.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upgrade motif to detect ambiguous letters — patternize_motif","text":"","code":"patternize_motif(motif)"},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/patternize_motif.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upgrade motif to detect ambiguous letters — patternize_motif","text":"motif [character(1)] Motif patternize.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/patternize_motif.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Upgrade motif to detect ambiguous letters — patternize_motif","text":"single string regex-ready motif.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/pluralize.html","id":null,"dir":"Reference","previous_headings":"","what":"Return plural or singular form — pluralize","title":"Return plural or singular form — pluralize","text":"Returns plural singular form depending whether value equal 1. default returns plural suffix \"-s\" singular empty suffix.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/pluralize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return plural or singular form — pluralize","text":"","code":"pluralize(value, plural = \"s\", singular = \"\")"},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/pluralize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return plural or singular form — pluralize","text":"value [numeric()] Values check equality 1. plural [character(1)] String return equality satisfied. singular [character(1)] String return equality satisfied.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/pluralize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return plural or singular form — pluralize","text":"vector plural/singular values length value parameter.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/prettify_chains.html","id":null,"dir":"Reference","previous_headings":"","what":"Present chains in human-friendly format — prettify_chains","title":"Present chains in human-friendly format — prettify_chains","text":"Converts tibble sequence data chains protein human-readable string. tibble empty, returns \"sequence available\" instead.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/prettify_chains.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Present chains in human-friendly format — prettify_chains","text":"","code":"prettify_chains(tbl_sq)"},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/prettify_chains.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Present chains in human-friendly format — prettify_chains","text":"tbl_sq [data.frame()] Sequence data one protein, result call read_chains().","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/prettify_chains.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Present chains in human-friendly format — prettify_chains","text":"single string, possibly multiple lines.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/prettify_sequence_output.html","id":null,"dir":"Reference","previous_headings":"","what":"Present sequence in human-friendly format — prettify_sequence_output","title":"Present sequence in human-friendly format — prettify_sequence_output","text":"Displays sequence line group 10 (default, configurable sequence_group_length AG option), group numbered. Prepends sequence length chain name, applicable.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/prettify_sequence_output.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Present sequence in human-friendly format — prettify_sequence_output","text":"","code":"prettify_sequence_output(name, sequence)"},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/prettify_sequence_output.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Present sequence in human-friendly format — prettify_sequence_output","text":"name [character(1)] Chain name. applicable, use NA. sequence [character(1)] Amino acid sequence.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/prettify_sequence_output.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Present sequence in human-friendly format — prettify_sequence_output","text":"single string multiple lines (probably 3 4).","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/reactive_allow_selection_transfer.html","id":null,"dir":"Reference","previous_headings":"","what":"Verify if ","title":"Verify if ","text":"function checks allowed transfer selection protein interaction tables main table. requirements rows selected either interactors interactees table, \"ignore filters\" option used.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/reactive_allow_selection_transfer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Verify if ","text":"","code":"reactive_allow_selection_transfer(input)"},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/reactive_allow_selection_transfer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Verify if ","text":"input [reactivevalues()] input object app module contains protein details.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/reactive_allow_selection_transfer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Verify if ","text":"reactive object single boolean describing whether transfering selection allowed.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/reactive_base_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate base tabular data — reactive_base_data","title":"Generate base tabular data — reactive_base_data","text":"Applies set filters ag_data_interactions based set attribute value filters motif filter.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/reactive_base_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate base tabular data — reactive_base_data","text":"","code":"reactive_base_data(motif, ...)"},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/reactive_base_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate base tabular data — reactive_base_data","text":"motif [reactive(ag_motif(1))] Motif filter . ... [reactive(ag_attr_values())] Attribute value filters apply.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/reactive_base_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate base tabular data — reactive_base_data","text":"reactive object tibble containing filtered base tabular data.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/reactive_graph_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate graph data — reactive_graph_data","title":"Generate graph data — reactive_graph_data","text":"Applies set transformations base tabular data based currently selected attribute group .","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/reactive_graph_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate graph data — reactive_graph_data","text":"","code":"reactive_graph_data(data, group)"},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/reactive_graph_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate graph data — reactive_graph_data","text":"data [reactive(tibble())] AmyloGraph tabular edge data. group [reactive(character(1))] Name currently selected attribute (none, empty string).","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/reactive_graph_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate graph data — reactive_graph_data","text":"reactive object tibble containing mutated graph data.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/reactive_node_positions.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve node positions in a network — reactive_node_positions","title":"Retrieve node positions in a network — reactive_node_positions","text":"Triggers update network_positions input value, reads value formats data.frame.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/reactive_node_positions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve node positions in a network — reactive_node_positions","text":"","code":"reactive_node_positions(input, network_id)"},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/reactive_node_positions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve node positions in a network — reactive_node_positions","text":"input [reactivevalues()] input object app module contains network. network_id [character(1)] ID network.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/reactive_node_positions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve node positions in a network — reactive_node_positions","text":"reactive object NULL positions available tibble x, y id columns.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/reactive_selected_node_label.html","id":null,"dir":"Reference","previous_headings":"","what":"Access label of currently selected protein — reactive_selected_node_label","title":"Access label of currently selected protein — reactive_selected_node_label","text":"function extracts label protein selected one available selectors (drop-list clicking graph node).","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/reactive_selected_node_label.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Access label of currently selected protein — reactive_selected_node_label","text":"","code":"reactive_selected_node_label(input)"},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/reactive_selected_node_label.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Access label of currently selected protein — reactive_selected_node_label","text":"input [reactivevalues()] input object app module contains protein selector. node_data [data.frame()] AmyloGraph node data.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/reactive_selected_node_label.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Access label of currently selected protein — reactive_selected_node_label","text":"reactive object single string containing protein name.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/reactive_selection_config.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct DT selection config — reactive_selection_config","title":"Construct DT selection config — reactive_selection_config","text":"Constructs selection configuration main table according DataTable specification. required due table proxy available rendering table first.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/reactive_selection_config.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct DT selection config — reactive_selection_config","text":"","code":"reactive_selection_config(tabs_visited, initial_selection)"},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/reactive_selection_config.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct DT selection config — reactive_selection_config","text":"rvals [reactivevalues()] Information table visited rows selected single protein tables.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/reactive_selection_config.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct DT selection config — reactive_selection_config","text":"Value use selection parameter renderDataTable(), either list string.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/reactive_subtable_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Build table data for single protein — reactive_subtable_data","title":"Build table data for single protein — reactive_subtable_data","text":"Mutates filtered interaction data single selected protein contain DOI links clickable AGIDs; selects columns displayed interactors interactees table.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/reactive_subtable_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build table data for single protein — reactive_subtable_data","text":"","code":"reactive_subtable_data(edges, ns, input, target_id, target_variable)"},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/reactive_subtable_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build table data for single protein — reactive_subtable_data","text":"edges [reactivevalues()] AmyloGraph data \"table\" element. ns [codefunction(1)] Namespace function use AGID buttons. input [reactivevalues()] input object app module contains protein selector. target_id [character(1)] ID column name use. target_variable [character(1)] Protein name column use.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/reactive_subtable_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build table data for single protein — reactive_subtable_data","text":"reactive object tibble containing filtered interaction data single protein, either interactors interactees (depends selected target ID).","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/reactive_table_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Build table data — reactive_table_data","title":"Build table data — reactive_table_data","text":"Mutates filtered interaction data contain DOI links clickable AGIDs; selects columns displayed main table.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/reactive_table_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build table data — reactive_table_data","text":"","code":"reactive_table_data(edges, ns)"},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/reactive_table_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build table data — reactive_table_data","text":"edges [reactivevalues()] AmyloGraph data \"table\" element. ns [codefunction(1)] Namespace function use AGID buttons.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/reactive_table_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build table data — reactive_table_data","text":"reactive object tibble containing filtered interaction data.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/read_chains.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse chain sequence data — read_chains","title":"Parse chain sequence data — read_chains","text":"Reads amino acid sequences corresponding names, available. input either FASTA format single sequence without name.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/read_chains.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse chain sequence data — read_chains","text":"","code":"read_chains(txt, separator = ag_option(\"chain_separator\"))"},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/read_chains.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse chain sequence data — read_chains","text":"txt [character(1)] Sequence data parse. separator [character(1)] character string split data lines .","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/read_chains.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse chain sequence data — read_chains","text":"tibble following columns: name sequence.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/render_network.html","id":null,"dir":"Reference","previous_headings":"","what":"Render visNetwork graph — render_network","title":"Render visNetwork graph — render_network","text":"Renders visNetwork graph using initial AmyloGraph data. changes graph done visNetworkProxy() inside observer parts code.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/render_network.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Render visNetwork graph — render_network","text":"","code":"render_network(edges)"},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/render_network.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Render visNetwork graph — render_network","text":"edges [reactivevalues()] AmyloGraph data \"graph\" element, edges plot. ag_data_nodes [data.frame()] Output ag_data_nodes(), nodes plot.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/render_num_interactions_by_paper.html","id":null,"dir":"Reference","previous_headings":"","what":"Render a plot of interaction count by paper — render_num_interactions_by_paper","title":"Render a plot of interaction count by paper — render_num_interactions_by_paper","text":"Renders barplot frequency interaction counts papers; shows many interactions usually retrieved single paper.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/render_num_interactions_by_paper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Render a plot of interaction count by paper — render_num_interactions_by_paper","text":"","code":"render_num_interactions_by_paper(...)"},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/render_num_interactions_by_paper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Render a plot of interaction count by paper — render_num_interactions_by_paper","text":"... Additional parameters renderPlot(). interactions [data.frame()] AmyloGraph interaction data.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/render_num_interactions_by_protein.html","id":null,"dir":"Reference","previous_headings":"","what":"Render a table of interaction count by protein — render_num_interactions_by_protein","title":"Render a table of interaction count by protein — render_num_interactions_by_protein","text":"Renders table interaction count protein, arranged protein name alphabetically.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/render_num_interactions_by_protein.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Render a table of interaction count by protein — render_num_interactions_by_protein","text":"","code":"render_num_interactions_by_protein()"},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/render_num_interactions_by_protein.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Render a table of interaction count by protein — render_num_interactions_by_protein","text":"interactions [data.frame()] AmyloGraph interaction data. nodes [data.frame()] AmyloGraph node data.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/render_protein_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Render list of protein sources — render_protein_info","title":"Render list of protein sources — render_protein_info","text":"function generates list source organisms UniProt IDs given protein. UniProt IDs contain links UniProt site.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/render_protein_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Render list of protein sources — render_protein_info","text":"","code":"render_protein_info(selected_node_label)"},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/render_protein_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Render list of protein sources — render_protein_info","text":"selected_node_label [reactive(character(1))] label (.e. human-readable name) protein currently selected graph. protein_data [data.frame] list source organisms UniProt IDs proteins database.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/render_protein_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Render list of protein sources — render_protein_info","text":"renderText object.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/safe_seq.html","id":null,"dir":"Reference","previous_headings":"","what":"Safely create a sequence of numbers — safe_seq","title":"Safely create a sequence of numbers — safe_seq","text":"Wraps base::seq() safeguard returns empty vector sequence created.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/safe_seq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Safely create a sequence of numbers — safe_seq","text":"","code":"safe_seq(from, to, ...)"},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/safe_seq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Safely create a sequence of numbers — safe_seq","text":"[numeric(1)] First element sequence. [numeric(1)] Upper limit sequence. ... Arguments passed seq().","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/safe_seq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Safely create a sequence of numbers — safe_seq","text":"vector numbers.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/select_graph_columns.html","id":null,"dir":"Reference","previous_headings":"","what":"Select columns relevant to graph data — select_graph_columns","title":"Select columns relevant to graph data — select_graph_columns","text":"Subsets columns use ones relevant graph.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/select_graph_columns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select columns relevant to graph data — select_graph_columns","text":"","code":"select_graph_columns(data, group)"},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/select_graph_columns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select columns relevant to graph data — select_graph_columns","text":"data [tibble()] Data modify. group [character(1)] Name currently selected attribute (none, empty string).","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/select_graph_columns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select columns relevant to graph data — select_graph_columns","text":"tibble set selected possibly renamed columns.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/sequence_indices.html","id":null,"dir":"Reference","previous_headings":"","what":"Index along a sequence — sequence_indices","title":"Index along a sequence — sequence_indices","text":"Creates vector indices use along sequence.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/sequence_indices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Index along a sequence — sequence_indices","text":"","code":"sequence_indices(sequence)"},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/sequence_indices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Index along a sequence — sequence_indices","text":"sequence [character(1)] single string sequence index.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/sequence_indices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Index along a sequence — sequence_indices","text":"vector strings, containing several padded indices used single line.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/sequence_to_lines.html","id":null,"dir":"Reference","previous_headings":"","what":"Split sequence into lines — sequence_to_lines","title":"Split sequence into lines — sequence_to_lines","text":"Splits sequence lines indicated length (default 80) adds spaces groups (default 10 characters). used indices preferably.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/sequence_to_lines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split sequence into lines — sequence_to_lines","text":"","code":"sequence_to_lines(sequence)"},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/sequence_to_lines.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split sequence into lines — sequence_to_lines","text":"sequence [character(1)] single string sequence split lines.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/sequence_to_lines.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split sequence into lines — sequence_to_lines","text":"vector strings, element line.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/table_download_handler.html","id":null,"dir":"Reference","previous_headings":"","what":"Handle download of AmyloGraph data — table_download_handler","title":"Handle download of AmyloGraph data — table_download_handler","text":"Creates download handler can inserted app used download AmyloGraph data various formats.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/table_download_handler.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Handle download of AmyloGraph data — table_download_handler","text":"","code":"table_download_handler(input, table_data, write_function, extension)"},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/table_download_handler.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Handle download of AmyloGraph data — table_download_handler","text":"input [reactivevalues()] input object app module contains table. table_data [data.frame()] AmyloGraph table data. write_function [function(1)] function transforms table data file. extension [character(1)] File extension without dot append filename (e.g. \"csv\").","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/table_download_handler.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Handle download of AmyloGraph data — table_download_handler","text":"downloadHandler object.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/text_label_attribute.html","id":null,"dir":"Reference","previous_headings":"","what":"Access human-readable attribute label — text_label_attribute","title":"Access human-readable attribute label — text_label_attribute","text":"Returns well-formatted label interaction attribute.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/text_label_attribute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Access human-readable attribute label — text_label_attribute","text":"","code":"text_label_attribute(attribute)"},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/text_label_attribute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Access human-readable attribute label — text_label_attribute","text":"attribute [character(1)] internal name interaction attribute.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/text_label_attribute.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Access human-readable attribute label — text_label_attribute","text":"single string human-readable label.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/text_question_attribute.html","id":null,"dir":"Reference","previous_headings":"","what":"Access human-readable question text — text_question_attribute","title":"Access human-readable question text — text_question_attribute","text":"Returns well-formatted question asked gathering data interactions.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/text_question_attribute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Access human-readable question text — text_question_attribute","text":"","code":"text_question_attribute(attribute)"},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/text_question_attribute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Access human-readable question text — text_question_attribute","text":"attribute [character(1)] internal name interaction attribute.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/text_question_attribute.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Access human-readable question text — text_question_attribute","text":"single string human-readable question.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/toggle_state_and_css.html","id":null,"dir":"Reference","previous_headings":"","what":"Enable/disable element with CSS styling — toggle_state_and_css","title":"Enable/disable element with CSS styling — toggle_state_and_css","text":"Toggles element state sets CSS class allow customizing look elements disabled (useful differentiate enabled elements).","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/toggle_state_and_css.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Enable/disable element with CSS styling — toggle_state_and_css","text":"","code":"toggle_state_and_css(selector, class, condition)"},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/toggle_state_and_css.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Enable/disable element with CSS styling — toggle_state_and_css","text":"selector [character(1)] Query selector elements target. class [character(1)] Class add condition satisfied. condition [function(1)] Function takes parameters evaluates either TRUE FALSE.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/visAGNetwork.html","id":null,"dir":"Reference","previous_headings":"","what":"Create visNetwork with AmyloGraph defaults — visAGNetwork","title":"Create visNetwork with AmyloGraph defaults — visAGNetwork","text":"Creates visNetwork set defaults specific AmyloGraph.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/visAGNetwork.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create visNetwork with AmyloGraph defaults — visAGNetwork","text":"","code":"visAGNetwork(edges, nodes = ag_data_nodes)"},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/visAGNetwork.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create visNetwork with AmyloGraph defaults — visAGNetwork","text":"edges [data.frame()] AmyloGraph edge data.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/visAGNetwork.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create visNetwork with AmyloGraph defaults — visAGNetwork","text":"visNetwork object can modified.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/visResetEdges.html","id":null,"dir":"Reference","previous_headings":"","what":"Clear and update edges in a graph — visResetEdges","title":"Clear and update edges in a graph — visResetEdges","text":"Clears existing edges creates new ones, reselects node.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/visResetEdges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clear and update edges in a graph — visResetEdges","text":"","code":"visResetEdges(graph, edges, input, selected_node_input_id)"},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/visResetEdges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clear and update edges in a graph — visResetEdges","text":"graph [visNetwork_Proxy(1)] Proxy graph update. edges [data.frame()] AmyloGraph graph data. input [reactivevalues()] input object app module contains graph. selected_node_input_id [character(1)] ID selected node (protein) reselect.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/visResetEdges.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clear and update edges in a graph — visResetEdges","text":"proxy graph parameter, updated.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/visToggleNodes.html","id":null,"dir":"Reference","previous_headings":"","what":"Reselect a node in a graph — visToggleNodes","title":"Reselect a node in a graph — visToggleNodes","text":"Reselects node (clearing previous selection, exists) deselects nodes, depending value id.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/visToggleNodes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reselect a node in a graph — visToggleNodes","text":"","code":"visToggleNodes(graph, id)"},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/visToggleNodes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reselect a node in a graph — visToggleNodes","text":"graph [visNetwork_Proxy(1)] Proxy graph update. id [character(0) | character(1)] Node ID verify.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/reference/visToggleNodes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reselect a node in a graph — visToggleNodes","text":"proxy graph parameter, updated.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/news/index.html","id":"amylograph-052","dir":"Changelog","previous_headings":"","what":"AmyloGraph 0.5.2","title":"AmyloGraph 0.5.2","text":"Fixes: Sequences now included CSV XLSX export. HTML buttons exported anymore. AGID column relocated first position.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/news/index.html","id":"amylograph-030","dir":"Changelog","previous_headings":"","what":"AmyloGraph 0.3.0","title":"AmyloGraph 0.3.0","text":"Functionalities: Added XGMML export. Improvements: Adjustment centering graph. Displaying information ID UniProt. Updates definitions documentation. Lots changes documentation. Fixes: Update source data newest version (probably final one) fixes bugs data transformation. Update existing tests. Update pkgdown workflows.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/news/index.html","id":"amylograph-020","dir":"Changelog","previous_headings":"","what":"AmyloGraph 0.2.0","title":"AmyloGraph 0.2.0","text":"Functionalities: Removed extensions used DT. Replaced custom solution selecting deselecting records table. Added button show records selected subtable main table. Integrated data proteins app. Repleced random descriptions proper ones. Improvements: Database statistics now displayed form DT. Enhanced Q1 helper. Added helpers right-panel-filter-checkbox new button. refactor server code.","code":""},{"path":"https://github.com/KotulskaLab/AmyloGraph/news/index.html","id":"amylograph-0121","dir":"Changelog","previous_headings":"","what":"AmyloGraph 0.1.2.1","title":"AmyloGraph 0.1.2.1","text":"Added NEWS.md file track changes package.","code":""}]
